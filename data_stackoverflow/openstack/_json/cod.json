[
    {
        "url": "https://stackoverflow.com/questions/11631246",
        "text": "require cloudfiles.php ; test:teste ; ; new cf_authentication $username, ; authenticate ; if authenticated echo cf authentication successful ; else echo authentication faile ;"
    },
    {
        "url": "https://stackoverflow.com/questions/13616927",
        "text": "import json body body hosts print json.dumps body hosts :"
    },
    {
        "url": "https://stackoverflow.com/questions/14355344",
        "text": "httpput httppost new httpput uriutil.encodequery newurl ; httppost.setheader x auth token , cred.getauthtoken ; httppost.addheader user agent , netmagic file upload ; system.out.println dest dest.getabsolutepath ; multipartentity mpentity new multipartentity ; contentbody cbfile contentbody new filebody src ; mpentity.addpart dest.getname , cbfile ; httppost.setentity mpentity ; system.out.println executing request httppost.getrequestline ; httpresponse response httpclient.execute httppost ;"
    },
    {
        "url": "https://stackoverflow.com/questions/15525297",
        "text": "from keystoneclient.v2_0 import client keystone client.client username=user, tenant_name=tenant_name, auth_url=keystone_url user keystone.users.get user_id"
    },
    {
        "url": "https://stackoverflow.com/questions/15978149",
        "text": "from nova.scheduler import filters from nova.openstack.common import log as logging log logging.getlogger __name__ class testfilter filters.basehostfilter : noop host filter. returns all hosts. def host_passes self, host_state, filter_properties : log.debug coming from: nova scheduler filters test_filter.py return true"
    },
    {
        "url": "https://stackoverflow.com/questions/15978149",
        "text": "scheduler_available_filters=nova.scheduler.filters.all_filters scheduler_available_filters=nova.scheduler.filters.test_filter.testfilter scheduler_default_filters=testfilter,ramfilter,computefilter"
    },
    {
        "url": "https://stackoverflow.com/questions/15978149",
        "text": "scheduler_available_filters=nova.scheduler.filters.testfilter scheduler_default_filters=testfilter"
    },
    {
        "url": "https://stackoverflow.com/questions/16140504",
        "text": "usage api.nova.usage_get self.request, self.tenant_id, start, end"
    },
    {
        "url": "https://stackoverflow.com/questions/16771346",
        "text": "def connect params : connection kombu.connection hostname=params exchange kombu.entity.exchange name=params exchange_name exchange_type , exchange_durable , auto_delete=params , exchange_internal queue_list for queue in params queues_params : queue_list.append kombu.messaging.queue name=queue name , routing_key=queue , , durable , auto_delete=queue consumer kombu.messaging.consumer channel=connection.channel , no_ack=true, self._process_message consumer.consume return connection"
    },
    {
        "url": "https://stackoverflow.com/questions/16882683",
        "text": "import keystoneclient.v2_0 import ceilometerclient.v2 as ceilometer class cloudmessagehandler object : def __init__ self, params : self._client none self._auth_data self._get_token params auth try: print auth_data repr self._auth_data self._client ceilometer.client endpoint=self._auth_data , token except: raise exception can t create ceilometer client. def _get_token self, params : try: ksclient keystoneclient.v2_0.client , password , tenant_id=params , tenant_name=params , auth_url=params token ksclient.auth_token endpoint ksclient.service_catalog.url_for service_type= metering , endpoint_type=params return token token, endpoint endpoint except indexerror as e: raise exception can t get token and endpoint through keystone api. def test self : print meters self._client.meters.list print resources self._client.resources.list print alarms self._client.alarms.list"
    },
    {
        "url": "https://stackoverflow.com/questions/17530173",
        "text": "var cloudfilesprovider new cloudfilesprovider _cloudidentity ; dictionary string, string dicheaders new dictionary string, string ; dicheaders.add name , application directory ; memorystream ms new memorystream ; cloudfilesprovider.createobject containername, ms, directorypath, dicheaders ;"
    },
    {
        "url": "https://stackoverflow.com/questions/18085996",
        "text": "dicmetadata.add storeid , instrcontainerid ; dicmetadata.add filetype , instrfiletype ; dicmetadata.add datecreated , dtdatecreated.tostring mm dd yyyy hh:mm:ss.fff ; dicmetadata.add isprocessed , ; dicmetadata.add dateprocessed , datetime.now.tostring mm dd yyyy hh:mm:ss.fff ; cloudfilesprovider.createobjectfromfile instrcontainerid, instrsrcfilepath, strdesfilename, dicmetadata ;"
    },
    {
        "url": "https://stackoverflow.com/questions/18085996",
        "text": "restservice.stream absoluteuri, method, stream, chunksize, maxreadlength, headers, querystringparameter, requestsettings, progressupdated ;"
    },
    {
        "url": "https://stackoverflow.com/questions/18085996",
        "text": "cloudfilesprovider.createobjectfromfile instrcontainerid, instrsrcfilepath, strdesfilename ; cloudfilesprovider.updateobjectmetadata instrcontainerid, strdesfilename, dicmetadata ;"
    },
    {
        "url": "https://stackoverflow.com/questions/18444016",
        "text": "import keystoneclient.v2_0.client as ksclient import glanceclient keystone ksclient.client auth_url=credentials auth , username , password , tenant_name=credentials glance_endpoint keystone.service_catalog.url_for service_type= image , endpoint_type= glance glanceclient.client 1 image_name= cirros image_file= with open image_file as fimage: image glance.images.create name=image_name, is_public=true, disk_format= container_format= , properties aaaa : , bbbbbb : print image.get prints none"
    },
    {
        "url": "https://stackoverflow.com/questions/18492680",
        "text": "from django.conf.urls import patterns, include, url uncomment the next two lines to enable the admin: from django.contrib import admin admin.autodiscover urlpatterns patterns , uncomment the admin doc line below to enable admin documentation: url r doc , include django.contrib.admindocs.urls , uncomment the next line to enable the admin: url r , include admin.site.urls , url r , include openstack_auth.urls ,"
    },
    {
        "url": "https://stackoverflow.com/questions/18492680",
        "text": "from django.http import httpresponse from django.contrib.auth import authenticate, login def home request : user authenticate user , password if user is none: login request, user else: return httpresponse hello"
    },
    {
        "url": "https://stackoverflow.com/questions/18873617",
        "text": "import os import tornado.web from tornado.ioloop import ioloop from tornado.httpclient import asynchttpclient, httprequest def send_files : datfile none with open test_data 1.dat rb as datf: datfile datf.read ur print sending to ur pot httprequest ur put , x auth token : , content type : text plain , body http_put_client.fetch pot, handle_put_rep def handle_put_rep response : if response.error: print this is , response.error, type of else: print success in put ,response.headers http_put_client asynchttpclient send_files loop ioloop.instance if __name__ __main__ : loop.start"
    },
    {
        "url": "https://stackoverflow.com/questions/18930960",
        "text": "cloudfilesprovider.createobject containername, objectstream, name, headers: new dictionary string, string x object meta mimetype , image png , x object meta size , , x object meta filename , testimage.png , x object meta dimensions , , region: region ;"
    },
    {
        "url": "https://stackoverflow.com/questions/19330936",
        "text": "def check_name value : from keystoneclient.v2_0 import client as keystone_client token keystone_client.client username= admin tenant_name= , auth_url=auth_url token.users.list name_list for in a: name_list.append l.__getattribute__ name if value in name_list: log.error name conflict ... ... class createuser forms.selfhandlingform : name forms.charfield label=_ name , check_name"
    },
    {
        "url": "https://stackoverflow.com/questions/19443692",
        "text": "iterable module modules immutableset. module of new ; quantum contextbuilder.newbuilder provider .credentials identity, password .modules modules .build ; quantumapi quanapi quantumapi quantum.getapi ; for string zone quanapi.getconfiguredzones system.out.println zone zone ; networkapi netapi quanapi.getnetworkapiforzone regionone ; fluentiterable extends network nets netapi.list ; for network net nets system.out.println net.getname id ;"
    },
    {
        "url": "https://stackoverflow.com/questions/19504530",
        "text": "var accessroot jsonconvert.deserializeobject dictionary string, object jsonresponse ; var accessitems jsonconvert.deserializeobject dictionary string, object accessroot access .tostring ; var tokens jsonconvert.deserializeobject dictionary string, object accessitems token .tostring ; var tokentenantdict jsonconvert.deserializeobject dictionary string, string tokens tenant .tostring ; var servicecatalog jsonconvert.deserializeobject dictionary string, object accessitems servicecatalog .tostring ; var user jsonconvert.deserializeobject dictionary string, object accessitems user .tostring ; var metadata jsonconvert.deserializeobject dictionary string, object accessitems metadata .tostring ; string tokenexpiration tokens expires .tostring ; string tokenid tokens id .tostring ; string tokentenant tokens tenant .tostring ; string userusername user username .tostring ; string tenantid tokentenantdict id ; string userid user id .tostring ; string username user name .tostring ;"
    },
    {
        "url": "https://stackoverflow.com/questions/19512829",
        "text": "curl_easy_setopt curl, curlopt_postfields, auth : tenantname : admin , passwordcredentials : username : admin , password : openstack ;"
    },
    {
        "url": "https://stackoverflow.com/questions/19651369",
        "text": "import urllib import import cookielib cookie cookielib.cookiejar opener urllib2.httpcookieprocessor cookie headers user agent : windows; u; windows nt en us; rv:1.9.1.6 gecko firefox username : admin , password 1f22f83ac2724132 , csrfmiddlewaretoken xv5tyeqhitehymf7ovui0pealmymh9zm , url data postdata, headers headers result opener.open print result.read"
    },
    {
        "url": "https://stackoverflow.com/questions/19748575",
        "text": "self.conn.create_consumer self.topic, rpc_dispatcher, node_topic self.topic, self.host self.conn.create_consumer node_topic, rpc_dispatcher, self.conn.create_consumer self.topic, rpc_dispatcher,"
    },
    {
        "url": "https://stackoverflow.com/questions/19835332",
        "text": "createserveroptions options createserveroptions.builder.adminpass password ; servercreated servercreated serverapi.create computedata.getservername , computedata.getimageid , flavourid, options ;"
    },
    {
        "url": "https://stackoverflow.com/questions/19985843",
        "text": "import novaclient"
    },
    {
        "url": "https://stackoverflow.com/questions/20090300",
        "text": "list"
    },
    {
        "url": "https://stackoverflow.com/questions/20091298",
        "text": "httpclient httpclient new defaulthttpclient ; httppost httppost new httppost ; try jsonobject auth new jsonobject ; jsonobject json new jsonobject ; auth.put auth , json ; jsonobject pcredentials new jsonobject ; json.put passwordcredentials: , pcredentials ; pcredentials.put username , admin ; pcredentials.put password , admin ; log.i tag , passing your data ; stringentity new stringentity auth.tojsonstring ; utf 8 application json ; httppost.setheader content type , application json ; httpresponse httppost .setentity ; execute http post request httpresponse response httpclient.execute httppost ; log.i tag , server response is ; catch ioexception e log.e tag , ioexception e.tostring ; todo auto generated catch block"
    },
    {
        "url": "https://stackoverflow.com/questions/20204430",
        "text": "compute_driver= libvirt.libvirtdriber"
    },
    {
        "url": "https://stackoverflow.com/questions/20204430",
        "text": "compute_driver=docker.dockerdriver"
    },
    {
        "url": "https://stackoverflow.com/questions/20429971",
        "text": "from swiftclient import client import stringio import utils class connection client.connection : __metaclass__ monkeypatch_class def get_object self, path, obj, resp_chunk_size=none, ... : contents none headers retrieve content from path and store it in contents ... if resp_chunk_size is not none: stream the string into chunks def _object_body : stream stringio.stringio contents buf stream.read resp_chunk_size while buf: yield buf buf stream.read resp_chunk_size contents _object_body return headers, contents"
    },
    {
        "url": "https://stackoverflow.com/questions/20429971",
        "text": "class swiftstorage storage : def get_content self, path, chunk_size=none path self._init_path path try: _, obj self._connection.get_object self._container, path, resp_chunk_size=chunk_size return obj except exception: raise ioerror could not get content: .format path def stream_read self, path : try: return self.get_content path, chunk_size=self.buffer_size except exception: raise oserror could not read content from stream: .format path"
    },
    {
        "url": "https://stackoverflow.com/questions/20429971",
        "text": "def test_stream self : filename self.gen_random_string test content self.gen_random_string 7 self._storage.stream_write filename, io io.close test read write data for buf in self._storage.stream_read filename : data buf self.assertequal content, data, stream read failed. output: .format data"
    },
    {
        "url": "https://stackoverflow.com/questions/20429971",
        "text": "def gen_num : def _object_body : for in range : yield return _object_body def get_num : return gen_num def stream_read : return get_num def main : num for in stream_read : num print num if __name__ __main__ : main"
    },
    {
        "url": "https://stackoverflow.com/questions/20624611",
        "text": "img.save usr lib python2.6 openstackdashboard static dashboard img validate.jpeg return strs strs is picture s data"
    },
    {
        "url": "https://stackoverflow.com/questions/20624611",
        "text": "from .auth_code import create_validate_code auth_code_str create_validate_code"
    },
    {
        "url": "https://stackoverflow.com/questions/20871264",
        "text": "header content type: text plain ; require vendor autoload.php ; use new array username my_username , apikey my_apikey ; authenticate ; echo authenticated with token: gettoken \\n\\n ; print_r $client getcatalog ;"
    },
    {
        "url": "https://stackoverflow.com/questions/20982023",
        "text": "import logging import os import sys import django.core.handlers.wsgi from django.conf import settings add this file path to sys.path in order to import settings sys.path.insert 0, os.path.join os.path.dirname os.path.realpath __file__ , .. .. os.environ django_settings_module openstack_dashboard.settings sys.stdout sys.stderr debug true application django.core.handlers.wsgi.wsgihandler"
    },
    {
        "url": "https://stackoverflow.com/questions/21090545",
        "text": "from boto import ostack is_secure=false, nova , services cloud ostack.run_instances ami xxxxx , key_name="
    },
    {
        "url": "https://stackoverflow.com/questions/21104882",
        "text": "def get_engine : global engine global conn if engine: if not conn: conn engine.connect return engine, conn conn_str .join conf db_dialect , : , conf db_user , : , conf db_pwd , , conf db_host , : , conf db_port , , conf db_name engine sqlalchemy.create_engine conn_str conn engine.connect return engine, conn"
    },
    {
        "url": "https://stackoverflow.com/questions/21104882",
        "text": "class nvi_instance object : inter_clouds def __init__ self : self.engine, self.conn get_engine def sel_nvi_ipv4 self, guest_uuid : sqlalchemy.select weixinverify.c.logical_ipv4 .where weixinverify.c.guest_uuid guest_uuid return self.conn.execute s def sel_nvi_ipv6 self, guest_uuid : sqlalchemy.select weixinverify.c.logical_ipv6 .where weixinverify.c.guest_uuid guest_uuid return self.conn.execute s"
    },
    {
        "url": "https://stackoverflow.com/questions/21104882",
        "text": "nvi.sel_nvi_ip id .fetchone"
    },
    {
        "url": "https://stackoverflow.com/questions/21105194",
        "text": "httpclient httpclient new defaulthttpclient ; httpput httpost new httpput mylink auth_fa6362c6520449f9a8905e84fee68f8c +imagename try httpost.setheader x auth token , ; httpost.setheader content type , application octet stream ; httpost.setheader content length , integer.tostring binaryimagelength ; httpost.setheader content disposition , binaryimage ; this is path of the image from the phone memory e.g. log.i , pushing your data ; httpresponse httpost ; responsehandler string responsehandler new basicresponsehandler ; string httpclient.execute httpost, responsehandler ; log.i , response.getstatusline ; log.i , ; catch ioexception e log.e , ioexception e.tostring ; todo auto generated catch block alertdialog alertdialog new alertdialog.builder mainactivity.this,alertdialog.theme_device_default_light .create ; alertdialog.settitle ; alertdialog.setmessage e.tostring ; alertdialog.setbutton ok , new dialoginterface.onclicklistener public void onclick dialoginterface dialog, int which todo add your code for the button here. ; alertdialog.show ;"
    },
    {
        "url": "https://stackoverflow.com/questions/21171261",
        "text": "import static com.google.common.io.closeables.closequietly; import java.io.closeable; import java.util.set; import org.jclouds.contextbuilder; import org.jclouds.compute.computeservice; import org.jclouds.compute.computeservicecontext; import org.jclouds.compute.domain.computemetadata; import org.jclouds.logging.slf4j.config.slf4jloggingmodule; import org.jclouds.openstack.nova.v2_0.novaapi; import org.jclouds.openstack.nova.v2_0.novaasyncapi; import org.jclouds.openstack.nova.v2_0.domain.server; import org.jclouds.openstack.nova.v2_0.features.serverapi; import org.jclouds.rest.restcontext; import com.google.common.collect.immutableset; import com.google.inject.module; public class jcloudsopenstack implements closeable private computeservice compute; private restcontext nova; public static void main string args jcloudsopenstack jcloudopenstack new jcloudsopenstack ; try jcloudopenstack.init ; jcloudopenstack.listservers ; jcloudopenstack.close ; catch exception e e.printstacktrace ; finally jcloudopenstack.close ; private void init iterable modules immutableset. of new ; string provider openstack nova ; string identity ... ; login name string password ... ; password computeservicecontext context contextbuilder.newbuilder provider .credentials identity, password .modules modules .buildview computeservicecontext.class ; compute context.getcomputeservice ; nova context.unwrap ; private void listservers set extends computemetadata nodes compute.listnodes ; system.out.println nodes.size ; public void close closequietly compute.getcontext ;"
    },
    {
        "url": "https://stackoverflow.com/questions/21536821",
        "text": "interface subnet_id=subnet_id,device_index=0, , associate_public_ip_address=false interfaces interface reservation self.ec2_connection.run_instances max_count=number_nodes, key_name=self.instance_key, user_data=none, instance_type=instance_type,network_interfaces=interfaces"
    },
    {
        "url": "https://stackoverflow.com/questions/21855262",
        "text": "cloudidentity identity new cloudidentity username files.user , apikey pswd , ; var _storage new cloudfilesprovider identity ;"
    },
    {
        "url": "https://stackoverflow.com/questions/21855262",
        "text": "iidentityprovider identityprovider new cloudidentityprovider ; var useraccess identityprovider.authenticate new rackspacecloudidentity username myusername , password mypassword , cloudinstance ;"
    },
    {
        "url": "https://stackoverflow.com/questions/21902935",
        "text": "cloudidprovider.authenticate cloudid ;"
    },
    {
        "url": "https://stackoverflow.com/questions/21902935",
        "text": "cloudserversprovider.createserver cloudservername , windows server , ;"
    },
    {
        "url": "https://stackoverflow.com/questions/21954229",
        "text": "class addswitch tables.linkaction : name addswitch verbose_name _ add switch url horizon:project:sdncontroller:addswitch classes ajax modal , btn create , class switches tables.datatable : dpid tables.column dpid ,verbose_name=_ dpid address tables.column address , verbose_name=_ vendor tables.column vendor , verbose_name=_ packets tables.column packets , verbose_name=_ bytes tables.column bytes , verbose_name=_ flows tables.column flows , verbose_name=_ connectedsince tables.column connectedsince , verbose_name=_ tables.column details , verbose_name=_ class meta: name switches verbose_name _ switches table_actions addswitch,"
    },
    {
        "url": "https://stackoverflow.com/questions/21954229",
        "text": "class addswitch workflows.workflow : slug addswitch name _ add switch finalize_button_name _ add success_message _ added switch . failure_message _ unable to add switch . success_url horizon:project:sdncontroller:index default_steps addswitchstep, def format_status_message self, message : name self.context.get name return message name def handle self, request, context : try: request, return true except exception: return false"
    },
    {
        "url": "https://stackoverflow.com/questions/22010257",
        "text": "xe2x80x98myext_apixe2x80x99 class manager manager.manager :"
    },
    {
        "url": "https://stackoverflow.com/questions/22010257",
        "text": "xe2x80x98myext_apixe2x80x99 class controller.v3controller"
    },
    {
        "url": "https://stackoverflow.com/questions/22012436",
        "text": "var identity new cloudidentity username username , apikey apikey ; var storage new cloudfilesprovider identity ; stream jpgstream new memorystream ; storage.getobject files.container , , jpgstream ; stream pdfstream new memorystream ; storage.getobject files.container , , pdfstream ; var jpgresult file jpgstream, image jpg , ; var pdfresult file pdfstream, application pdf , ;"
    },
    {
        "url": "https://stackoverflow.com/questions/22037293",
        "text": "var identity new cloudidentity username username , apikey apikey , ; var storage new cloudfilesprovider identity ; storage.createobject sitefiles , inputstream, filename ;"
    },
    {
        "url": "https://stackoverflow.com/questions/22312631",
        "text": "class deployselection tables.batchaction : name deploy action_present _ deploy action_past _ deploy selected selection to data_type_singular _ selection data_type_plural _ selections classes btn deploy def action self, request, obj_id : log.warn _ obj_id obj_id obj_id here and get hypervsior name work based using hypervisor name here"
    },
    {
        "url": "https://stackoverflow.com/questions/22389782",
        "text": "private void init iterable module modules immutableset. module of new ; string api swift ; string identity test:tester ; tenantname:username string password testing ; demo account uses admin_password too blobstorecontext context contextbuilder.newbuilder api .credentials identity, password .modules modules .buildview blobstorecontext.class ; storage context.getblobstore ; swift context.unwrap ;"
    },
    {
        "url": "https://stackoverflow.com/questions/22699829",
        "text": "iterable module modules immutableset. module of new sshjsshclientmodule ; contextbuilder builder contextbuilder.newbuilder provider .endpoint endpoint .credentials identity, credential .modules modules ; system.out.printf initializing , builder.getapimetadata ; computeservice compute builder.buildview computeservicecontext.class .getcomputeservice ;"
    },
    {
        "url": "https://stackoverflow.com/questions/22733271",
        "text": "sahara savanna"
    },
    {
        "url": "https://stackoverflow.com/questions/22853557",
        "text": "public static void main string args throws ioexception blobstore blobstore .credentials test:test , test .buildview blobstorecontext.class .getblobstore ; blobstore.createcontainerinlocation null, container ; bytesource bytesource.wrap foo .getbytes charsets.utf_8 ; blob blobstore.blobbuilder foo bar 1 segment1 segment1.size ; system.out.println blobstore.putblob container , ; bytesource bytesource.wrap bar .getbytes charsets.utf_8 ; blob blobstore.blobbuilder foo bar 2 segment2 segment2.size ; system.out.println blobstore.putblob container , ; bytesource manifest bytesource.wrap .getbytes charsets.utf_8 ; todo: set manifest header here blob manifestblob blobstore.blobbuilder foo bar .payload manifest .contentlength manifest.size .build ; system.out.println blobstore.putblob container , manifestblob ; blob dloblob blobstore.getblob container , foo bar ; inputstream input dloblob.getpayload .openstream ; while true int input.read ; if i break; system.out.print char i ; should print foobar"
    },
    {
        "url": "https://stackoverflow.com/questions/22948334",
        "text": "from ceilometer import service from ceilometer.api import app import sys from paste.exceptions.errormiddleware import errormiddleware sys.stdout sys.stderr initialize the oslo configuration library and logging service.prepare_service wsgi_app app.versionselectorapplication application errormiddleware show_exceptions_in_wsgi_errors=true,"
    },
    {
        "url": "https://stackoverflow.com/questions/22992423",
        "text": "server server provider.getdetails my cloud server id ; console.out.writeline server.image.name ;"
    },
    {
        "url": "https://stackoverflow.com/questions/23441003",
        "text": "instances nova.servers.list for in instances: val_list i.diagnostics print val_list"
    },
    {
        "url": "https://stackoverflow.com/questions/23577855",
        "text": "var client https.request options, function res var buffers ; res.body= res.on data , function buffer buffers.push buffer ; ; res.on end , function err res.body buffers.join ; callback callback res ; ; ;"
    },
    {
        "url": "https://stackoverflow.com/questions/23577855",
        "text": "var client https.request options, function res res.body= res.on data , function buffer res.body+= buffer.tostring binary ; ; res.on end , function err callback callback res ; ; ;"
    },
    {
        "url": "https://stackoverflow.com/questions/23699945",
        "text": "from rackspace_auth_openstack.plugin import rackspaceauthplugin from rackspace_auth_openstack.plugin import auth_url_us from novaclient.client import client nova client version username , project_id , api_key , region_name dfw , auth_system rackspace , auth_plugin rackspaceauthplugin , auth_url auth_url_us print nova.servers.list print nova.volumes.list"
    },
    {
        "url": "https://stackoverflow.com/questions/23719795",
        "text": "import novaclient.v1_1.client as nvclient name cirros nova nvclient.client ... image nova.images.find name=name"
    },
    {
        "url": "https://stackoverflow.com/questions/23806308",
        "text": "from heatclient.client import client heat client , heat.stacks.validate template_file"
    },
    {
        "url": "https://stackoverflow.com/questions/23832791",
        "text": "swiftapi contextbuilder.newbuilder provider .endpoint .... .credentials identity, credentials .modules modules .buildapi swiftapi.class ; final objectapi objectapi swiftapi.objectapiinregionforcontainer region, container ; getoptions getoptions getoptions.builder.range 0,10 .range ; swiftobject obj objectapi.get object_name, getoptions ; payload payload obj.getpayload ; ????? expected binary stream but get something else"
    },
    {
        "url": "https://stackoverflow.com/questions/23861948",
        "text": "public class blobstoreobjectsignerservice implements objectsignerservice private blobrequestsigner blobrequestsigner; blobstore.private.container string privatecontainername; generates signed request with get method to access allocated object. objectname name of the stored file principalname name of the principal user which is putted the file temporary defines if file should be available for limited time timetolive time in seconds file will be available for fetching public httprequest generategetrequestforobject string objectname, string principalname, boolean temporary, long timetolive if temporary return this.generatetemporarygetrequestforobject objectname, principalname, timetolive ; else return this.generatepermanentgetrequestforobject objectname, principalname ; public httprequest generatepermanentgetrequestforobject string objectname, string principalname return this.generatepermanentgetrequestforobject privatecontainername, string.format , principalname, objectname ; public httprequest generatetemporarygetrequestforobject string objectname, string principalname, long timetolive return this.generatetemporarygetrequestforobject privatecontainername, string.format , principalname, objectname , timetolive ; public httprequest generatepermanentgetrequestforobject string containername, string objectname return this.blobrequestsigner.signgetblob containername, objectname ; public httprequest generatetemporarygetrequestforobject string containername, string objectname, long timetolive return this.blobrequestsigner.signgetblob containername, objectname, timetolive ;"
    },
    {
        "url": "https://stackoverflow.com/questions/24155766",
        "text": "from django.utils.translation import ugettext_lazy as_ import horizon class basepanelgroup horizon.dashboard : name _ overview slug overview panels hypervisors , class chargeback horizon.dashboard : name _ chargeback slug chargeback panels basepanelgroup , default_panel hypervisor permissions openstack.roles.admin , horizon.register chargeback"
    },
    {
        "url": "https://stackoverflow.com/questions/24289863",
        "text": "uri baseurl new cloudidentity cloudid new cloudidentity username username, password password ; cloudidentityprovider cip new cloudidentityprovider cloudid, baseurl ; useraccess ua cip.authenticate cloudid ; cloudserversprovider provider new cloudserversprovider cloudid ; metadata metadata new metadata ; add some metadata just because we can metadata.add description , example getting started ; string servername ; string imageid ; string flavorid ; newserver newserver provider.createserver servername, imageid, flavorid, diskconfiguration.manual, metadata ;"
    },
    {
        "url": "https://stackoverflow.com/questions/24307286",
        "text": "cloudnetwork detail cnp.shownetwork networkguid, regionone ;"
    },
    {
        "url": "https://stackoverflow.com/questions/24368301",
        "text": "var identity new cloudidentity username user , apikey key ; var cloudidentityprovider new cloudidentityprovider identity, new cloudidentityprovider.authenticate cloudidentityprovider.defaultidentity ;"
    },
    {
        "url": "https://stackoverflow.com/questions/24515333",
        "text": "expected actual internalservererror response excon::response:0x0000000421c830 :body : : the server has either erred or is incapable of performing the requested operation.\\ : , :headers content length , content type application json; , x compute request id , date tue, jul gmt , :status :remote_ip :local_port :local_address : : the server has either erred or is incapable of performing the requested operation.\\ : , content length , content type application json; , x compute request id , date tue, jul gmt ,"
    },
    {
        "url": "https://stackoverflow.com/questions/24525298",
        "text": "inputstream is new bytearrayinputstream data.getbytes utf 8 payload payload new inputstreampayload is ; payload.getcontentmetadata .setcontentlength long ; objectapi objectapi swiftapi.objectapiinregionforcontainer regionone , container_name ; string str strname ; objectapi.put str, payload ;"
    },
    {
        "url": "https://stackoverflow.com/questions/24530833",
        "text": "swiftapi.getobjectapiforregionandcontainer regionone , container_name .get object_name"
    },
    {
        "url": "https://stackoverflow.com/questions/24547010",
        "text": "vars newmachine"
    },
    {
        "url": "https://stackoverflow.com/questions/24756732",
        "text": "cloudidentity foo new cloudidentity username username, password password ; cloudidentityprovider bar new cloudidentityprovider new useraccess ua bar.authenticate foo ;"
    },
    {
        "url": "https://stackoverflow.com/questions/24756732",
        "text": "cloudfilesprovider cfp new cloudfilesprovider foo, bar ; ienumerable container listofcontainers cfp.listcontainers region: sbg 1"
    },
    {
        "url": "https://stackoverflow.com/questions/24814283",
        "text": "from __future__ import absolute_import from celery import celery celery celery phantom.tasks.celery_tasks celery.config_from_object bin.celeryconfig"
    },
    {
        "url": "https://stackoverflow.com/questions/24814799",
        "text": "from baremetal import baremetalnodemanager from novaclient import base class np_orchestration: def provisionnodes self : obj baremetalnodemanager base.managerwithfind ; var obj.create self, 192.168.xxx.xxx , 192.168.xxx.xxx print var obj np_orchestration obj.provisionnodes"
    },
    {
        "url": "https://stackoverflow.com/questions/24814799",
        "text": "class baremetalnodemanager base.managerwithfind : manage :class:`baremetalnode` resources. resource_class baremetalnode def create self, service_host, cpus, memory_mb, local_gb, prov_mac_address, pm_address=none, pm_user=none, pm_password=none, terminal_port=none create baremetal node. :param service_host: name of controlling compute host :param cpus: number of cpus in the node :param memory_mb: megabytes of ram in the node :param local_gb: gigabytes of local storage in the node :param pm_address: power management ip for the node :param pm_user: username for the node s power management :param pm_password: password for the node s power management :param prov_mac_address: mac address to provision the node :param terminal_port: shellinabox port :rtype: :class:`baremetalnode` body node : service_host : service_host, cpus : cpus, memory_mb : memory_mb, local_gb : local_gb, pm_address : pm_address, pm_user : pm_user, pm_password : pm_password, prov_mac_address : prov_mac_address, terminal_port : terminal_port return self._create os baremetal nodes , body, node"
    },
    {
        "url": "https://stackoverflow.com/questions/24847703",
        "text": "from keystoneclient.v2_0 import client as ksclient keystone_client ksclient.client token= , keystone_client.tenants.list"
    },
    {
        "url": "https://stackoverflow.com/questions/24889516",
        "text": "flat_interface flat_network_bridge vlan_interface public_interface network_manager nova.network.manager.flatdhcpmanager firewall_driver nova.virt.libvirt.firewall.iptablesfirewalldriver compute_driver libvirt.libvirtdriver default_ephemeral_format"
    },
    {
        "url": "https://stackoverflow.com/questions/25143107",
        "text": "createnetworkoptions createnetworkoptions createnetworkoptions.builder .name name .networktype networktype.local .build ; networkapi networkapi neutronapi.getnetworkapiforzone zone ; network network networkapi.create createnetworkoptions ;"
    },
    {
        "url": "https://stackoverflow.com/questions/25150936",
        "text": "from horizon import tabs from horizon import views from openstack_dashboard.dashboards.mydashboard.mypanel import tabs as mydashboard_tabs import sys import pycurl"
    },
    {
        "url": "https://stackoverflow.com/questions/25215144",
        "text": "soft_time_limit=600 def run_puppet_agent hostname : try: fabric_client fabric hostname result fabric_client.run_command puppet agent t , true, true if result.return_code or result.return_code return true, puppet agent run successfully else: raise exception command run failed with non zero or non code, and are status codes for successful puppet runs, returned code sudo puppet agent t , result.return_code except softtimelimitexceeded: raise exception puppet agent run took more than seconds except exception as e: args= hostname , log.info raise exception puppet agent failed with message e.message"
    },
    {
        "url": "https://stackoverflow.com/questions/25259983",
        "text": "nova.servers.create name xxx , xxx , image ,flavor fl.id,network key_name adikarikey"
    },
    {
        "url": "https://stackoverflow.com/questions/25263966",
        "text": "server nova.servers.create name xxx xxx xxx flavor.id ,key_name adikarikey ,nics net id : xxx v4 fixed ip :"
    },
    {
        "url": "https://stackoverflow.com/questions/25351307",
        "text": "identity tenant1:user@example.org credential xxxxxxxx"
    },
    {
        "url": "https://stackoverflow.com/questions/25410830",
        "text": "api.addtoserver ip, server id ;"
    },
    {
        "url": "https://stackoverflow.com/questions/25413644",
        "text": "openstack_keystone_multidomain_support true openstack_api_versions data_processing : identity : volume : openstack_keystone_url openstack_host"
    },
    {
        "url": "https://stackoverflow.com/questions/25503154",
        "text": "from novaclient.v1_1 import client"
    },
    {
        "url": "https://stackoverflow.com/questions/25526567",
        "text": "novaapi nova contextbuilder .newbuilder openstack nova .endpoint endpoint .credentials getidentity , getpassword .modules modules .buildapi novaapi.class ; volumeattachmentapi attachment nova.getvolumeattachmentextensionforzone constant_region .get ; volumeattachment attachment.attachvolumetoserverasdevice volumeidexisting, instanceid, devicedevxvdb ;"
    },
    {
        "url": "https://stackoverflow.com/questions/25615592",
        "text": "def handle self, request, data : glance does not really do anything with container_format at the moment. it requires it is set to the same disk_format for the three amazon image types, otherwise it just treats them as bare. as such we will just set that to be that here instead of bothering the user with asking them for information we can already determine. if data disk_format in ami , aki , ari , : container_format data disk_format else: container_format bare meta is_public : data is_public , protected : data protected , disk_format : data disk_format , container_format : container_format, min_disk : data minimum_disk or , min_ram : data minimum_ram or , name : data name , properties : if data description : meta properties description data description if data architecture : meta properties architecture data architecture my changes meta properties abc def if settings.horizon_images_allow_upload and policy.check image , upload_image , , request and data.get image_file , none : meta data self.files image_file else: meta copy_from data copy_from try: image api.glance.image_create request, messages.success request, _ your image has been queued for creation. data name return image except exception: exceptions.handle request, _ unable to create new image."
    },
    {
        "url": "https://stackoverflow.com/questions/25689993",
        "text": "public list selectitem getflavorlist list selectitem items new arraylist selectitem ; osclient osclient .credentials admin , nova .tenantname admin .authenticate ; list extends flavor flavors osclient.compute .flavors .list ; selectitem item null; for flavor flv: flavors item new selectitem ; item.setlabel flv.getname ; item.setvalue flv.getid ; items.add item ; return items;"
    },
    {
        "url": "https://stackoverflow.com/questions/25691862",
        "text": "verbose true debug true"
    },
    {
        "url": "https://stackoverflow.com/questions/25861356",
        "text": "var authuri new var username test ; var password tester ; var tenantid testing ; var credential new openstackcredential authuri, username, password, tenantid ; var client openstackclientfactory.createclient credential ; client.connect ; var storageserviceclient client.createserviceclient istorageserviceclient ; var storageaccount storageserviceclient.getstorageaccount ;"
    },
    {
        "url": "https://stackoverflow.com/questions/25937637",
        "text": "openstackclient.request"
    },
    {
        "url": "https://stackoverflow.com/questions/25937637",
        "text": "usernamepassword usernamepassword new usernamepassword usera,passa com.woorea.openstack.keystone.model.access access keystone .tokens .authenticate usernamepassword .execute ;"
    },
    {
        "url": "https://stackoverflow.com/questions/26208379",
        "text": "iterable module modules immutableset. module of ; string provider openstack neutron ; string identity admin:admin ; tenantname:username string credential devstack ; properties prop new properties ; prop.setproperty jclouds.relax hostname , true ; prop.setproperty jclouds.trust all certs , true ; neutronapi contextbuilder.newbuilder provider devstack ip .credentials identity, credential .modules modules .overrides prop .buildapi neutronapi.class ;"
    },
    {
        "url": "https://stackoverflow.com/questions/26657722",
        "text": "var rackspaceidentity new cloudidentity apikey xxx , username xxx ; var rackspaceprovider new cloudfilesprovider rackspaceidentity ; const string c:\\users\\jan\\appdata\\local\\temp\\tmp1b64.tmp var containername datetime.now.ticks.tostring cultureinfo.invariantculture ; rackspaceprovider.createcontainer containername ; rackspaceprovider.enablecdnoncontainer containername, ; console.writeline pre createobjectfromfile ; rackspaceprovider.createobjectfromfile containername, progressupdated: console.writeline x.tostring cultureinfo.invariantculture ; console.writeline post createobjectfromfile ; var datetime.now.ticks.tostring cultureinfo.invariantculture ; rackspaceprovider.createcontainer containername2 rackspaceprovider.enablecdnoncontainer containername2, ; console.writeline pre extractarchivefromfile ; rackspaceprovider.extractarchivefromfile bz2file, archiveformat.tarbz2, progressupdated: console.writeline x.tostring cultureinfo.invariantculture ; console.writeline post extractarchivefromfile ;"
    },
    {
        "url": "https://stackoverflow.com/questions/26714739",
        "text": "import os def get_nova_credentials_v2 : d version d username os.environ billing d password os.environ mypassword d auth_url os.environ my auth url d project_id os.environ projectname return"
    },
    {
        "url": "https://stackoverflow.com/questions/26714739",
        "text": "from credentials import get_nova_credentials_v2 from novaclient.client import client credentials get_nova_credentials_v2 nova_client client print nova_client.servers.list"
    },
    {
        "url": "https://stackoverflow.com/questions/27072616",
        "text": "httpconnectionpool : max retries exceeded with url: caused by class socket.error errno connection refused"
    },
    {
        "url": "https://stackoverflow.com/questions/27121386",
        "text": "private void listcontainers containerapi containerapi swiftapi.getcontainerapiforregion region ; set container containers containerapi.list .toset ; for container container containers objectapi objectapi swiftapi.getobjectapiforregionandcontainer region , container.getname ; objectlist objects objectapi.list ; crashes here for swiftobject object: objects system.out.println \\t\\t + object ; system.out.println \\t container ;"
    },
    {
        "url": "https://stackoverflow.com/questions/27519588",
        "text": "var configuration new couchbase.configuration.couchbaseclientconfiguration ; configuration.bucket bucketname ; configuration.urls.add new uri couchurl ; couchbase.couchbaseclient couchclient couchclient new couchbase.couchbaseclient configuration ; testconnectivity testobj new testconnectivity ; var result couchclient.executestore enyim.caching.memcached.storemode.set, , jsonconvert.serializeobject testobj ;`"
    },
    {
        "url": "https://stackoverflow.com/questions/27555741",
        "text": "vncserver_proxyclient_address vncserver_listen vnc_enabled true xvpvncproxy_base_url novncproxy_base_url"
    },
    {
        "url": "https://stackoverflow.com/questions/27565336",
        "text": "osclient os .credentials , .tenantname .authenticate ;"
    },
    {
        "url": "https://stackoverflow.com/questions/27773182",
        "text": "vagrant.configure 2 do config.vm.box dummy config.ssh.pty true work around issue where sudo requires tty config.vm.provision :shell, :keep_color true, echo sleeping secs sleep echo sleep again for secs sleep tee config.ssh.private_key_path . id_rsa config.vm.provider :rackspace do rs.username bozo rs.api_key the clown rs.flavor gb performance rs.image rs.public_key_path . id_rsa.pub rs.rackspace_region :dfw end end"
    },
    {
        "url": "https://stackoverflow.com/questions/27984258",
        "text": "import java.io.*; import java.net.*; import java.text.*; import java.util.*; public class stackorchestration private static final string token_id xananananana ; private static final string tenant_id ????? ; public static void createstack httpurlconnection connection null; bufferedreader br null; try url url new connection httpurlconnection url.openconnection ; string line; stringbuffer jsonstring new stringbuffer ; string payload stack_name\\ single server , disable_rollback\\ true, : , : heat_template_version: compute_instance: type: os::nova::server\\ \\n properties:\\n flavor: gb image: centos pv name: single server public_ip:\\n description: public ip address of the deployed compute value: get_attr: compute_instance, , timeout_mins\\ ; connection.setdoinput true ; connection.setdooutput true ; connection.setrequestmethod post ; connection.setrequestproperty x auth token , token_id ; connection.setrequestproperty content type , application json; ; connection.setrequestproperty accept , application json ; outputstreamwriter writer new outputstreamwriter connection.getoutputstream , utf ; writer.write payload ; writer.close ; br new bufferedreader new inputstreamreader connection.getinputstream ; while line br.readline null system.out.println ; br.close ; connection.disconnect ; catch exception e inputstream httpurlconnection connection .geterrorstream ; br new bufferedreader new inputstreamreader ; string nachricht; string response ; try while nachricht br.readline null response nachricht; system.out.println +++ response ; catch exception ex return; public static void main string args try createstack ; catch exception e e.printstacktrace ;"
    },
    {
        "url": "https://stackoverflow.com/questions/28081576",
        "text": "class updateworkload tables.linkaction : name update verbose_name _ edit workload url update classes ajax modal , icon pencil class workloadstable tables.datatable : name tables.column name , verbose_name=_ description tables.column description , verbose_name=_ image tables.column image , verbose_name=_ flavor tables.column flavor , verbose_name=_ class meta: name workloads_table verbose_name _ workloads table table_actions createnewworkload, updateworkload, deleteworkload row_actions updateworkload, deleteworkload"
    },
    {
        "url": "https://stackoverflow.com/questions/28081576",
        "text": "class updateview forms.modalformview : form_class project_forms.updateworkload template_name update_workload.html context_object_name workload success_url reverse_lazy index"
    },
    {
        "url": "https://stackoverflow.com/questions/28081576",
        "text": "class updateworkload forms.selfhandlingform : name forms.charfield max_length= 255 workload name description forms.charfield widget=forms.textarea, description , image_choices images forms.choicefield label=_ , flavor_choices flavors forms.choicefield label=_ , def handle self, request, data : try: here we will need to call update on and pass the id workload msg _ workload was successfully updated. messages.success request, msg return workload except exception: msg _ failed to update workload redirect reverse self.failure_url exceptions.handle request, msg,"
    },
    {
        "url": "https://stackoverflow.com/questions/28098530",
        "text": "class workloadstable tables.datatable : name tables.column name , verbose_name=_ description tables.column description , verbose_name=_ image tables.column image , verbose_name=_ flavor tables.column flavor , verbose_name=_ class meta: name workloads_table verbose_name _ workloads table table_actions createnewworkload, deleteworkload row_actions updateworkload, deleteworkload"
    },
    {
        "url": "https://stackoverflow.com/questions/28098530",
        "text": "class updateworkload tables.linkaction : name update verbose_name _ edit workload url horizon:mydashboard:workloads_panel:update classes ajax modal , icon pencil def get_link_url self, datum : base_url super updateworkload, self .get_link_url datum workload_id self.table.get_object_id datum reversed urlresolvers.reverse self.url, workload_id print reversed return urlresolvers.reverse self.url, workload_id"
    },
    {
        "url": "https://stackoverflow.com/questions/28098530",
        "text": "workloads r ?p workload_id urlpatterns patterns , url r , views.createview.as_view , create , url workloads update , views.updateview.as_view , update , url r , views.indexview.as_view , index ,"
    },
    {
        "url": "https://stackoverflow.com/questions/28155513",
        "text": "osclient os osfactory.builder .credentials user , password .tenantname tenant .authenticate ;"
    },
    {
        "url": "https://stackoverflow.com/questions/28221296",
        "text": "class setworkflowinfoaction workflows.action : name forms.charfield max_length= 255 workload name description forms.charfield widget=forms.textarea, description , image_choices images forms.choicefield label=_ , flavor_choices flavors forms.choicefield label=_ , def __init__ self, request, image_choices=image_choices, flavor_choices=flavor_choices, : super setworkflowinfoaction, self .__init__ request, image_choices flavor_choices images, self._more, self._prev api.glance.image_list_detailed self.request flavors api.nova.flavor_list request, true for image in images: image_choices.append image.id, image.name if len image_choices image_choices.insert 0, , _ select an image self.fields images .choices image_choices for flavor in flavors: flavor_choices.append flavor.id, flavor.name if len flavor_choices flavor_choices.insert 0, , _ select an flavor self.fields flavors .choices flavor_choices class meta: name _ basic workload information help_text _ slug set_workflow_info"
    },
    {
        "url": "https://stackoverflow.com/questions/28322651",
        "text": "string zone configfactory.load .getstring openstackzone ; novaapi novaapiclient getnovaapi userid, projectid ; optional extends quotaapi novaapiclient.getquotaextensionforzone zone ; quota quota quotaoptional.get .getbytenant projectbd.findbyid projectid .getprojectid ; consoleobjectmapper.getmapper .map quota, showquotabean ;"
    },
    {
        "url": "https://stackoverflow.com/questions/28352746",
        "text": "from keystoneclient.auth.identity import from keystoneclient import session from novaclient.client import client auth foo.bla admin , , tenant_name= sess session.session auth=auth nova client sess print nova.authenticate"
    },
    {
        "url": "https://stackoverflow.com/questions/28509158",
        "text": "urlpatterns patterns , url r , views.indexview.as_view , index , url r status , views.status , url r thanks , views.thanks ,"
    },
    {
        "url": "https://stackoverflow.com/questions/28565951",
        "text": "server nova.servers.create name vmname, image image.id, flavor flavor.id, nics nics, availability_zone availability_zone userdata user_data, key_name key_pair.name"
    },
    {
        "url": "https://stackoverflow.com/questions/28573053",
        "text": "from horizon import views from django import forms from django.shortcuts import render from django.http import httpresponseredirect status_choices good , good , bad , bad , compromised , compromised def thanks request : return render request, pinehurst_dashboard ssa_panel sent.html class ssaform forms.form : status forms.choicefield choices status_choices, status: def status request : print status called ,request.method if request.method post : if the form has been submitted... form ssaform request.post form bound to the post data if form.is_valid : all validation rules pass process the data in form.cleaned_data ... print redirect to thanks! return httpresponseredirect thanks redirect after post else: print form.is_valid false else: print requesting form ssaform initial status , bad an unbound form return render request, pinehurst_dashboard ssa_panel index.html , form : form, class indexview views.apiview : very simple class based view... template_name my_dashboard ssa_panel index.html def get_data self, request, context, : print get_data called , context add data to the context here... return context"
    },
    {
        "url": "https://stackoverflow.com/questions/28573053",
        "text": "from django.conf.urls import patterns from django.conf.urls import url from openstack_dashboard.dashboards.my_dashboard.ssa_panel import views urlpatterns patterns , url r , views.indexview.as_view , index , url r status , views.status , url r thanks , views.thanks ,"
    },
    {
        "url": "https://stackoverflow.com/questions/28670908",
        "text": "_authtokenplugin.register_conf_options conf, _authtoken_group"
    },
    {
        "url": "https://stackoverflow.com/questions/28784536",
        "text": "os openstack::connection.create :username admin , :auth_method password , :api_key supersecret , :auth_url"
    },
    {
        "url": "https://stackoverflow.com/questions/28824639",
        "text": "try: opts dict tenant_id= tenant id value region_name= region name swift_conn swiftclient.client.connection authurl= auth url username password tenant_name= tenant name os_options=opts swift_conn.post_container cont swift_conn.close except swiftclient.exceptions.clientexception: print traceback.format_exc"
    },
    {
        "url": "https://stackoverflow.com/questions/28987303",
        "text": "get host"
    },
    {
        "url": "https://stackoverflow.com/questions/28987303",
        "text": "from novaclient.client import client cl client version, username, password, project_id, auth_url hosts_list cl.hosts.list for in hosts_list: print this works and there are elements in hosts_list cl.hosts.get hosts_list 0 this does not work"
    },
    {
        "url": "https://stackoverflow.com/questions/28987303",
        "text": "for in hosts_list: try: hostname str h.host_name print try to get system from: hostname print cl.hosts.get hostname except exception as e: logger.error e"
    },
    {
        "url": "https://stackoverflow.com/questions/28988888",
        "text": "my_tenant keystone.tenants.get dea3061f17df49a1a22f105d5e9bc971 json.dumps my_tenant"
    },
    {
        "url": "https://stackoverflow.com/questions/29075666",
        "text": "import dateutil.parser import datetime from novaclient.v2 import client as nova_client from keystoneclient.auth.identity import from keystoneclient import session , , tenant_name= auth=auth version= 2 usage_list=nova.usage.get ************** ,start= %y for us in usage_list: print us.total_vcpus_usage"
    },
    {
        "url": "https://stackoverflow.com/questions/29125863",
        "text": "projects_dashboard horizon.get_dashboard project volumes_panel projects_dashboard.get_panel volumes images_panel projects_dashboard.get_panel images as_panel projects_dashboard.get_panel access_and_security permissions list getattr volumes_panel, permissions , permissions.append openstack.roles.admin volumes_panel.permissions tuple permissions"
    },
    {
        "url": "https://stackoverflow.com/questions/29232988",
        "text": "import java.sql.*; public class userregistration static final string jdbc_driver com.mysql.jdbc.driver ; static final string db_url jdbc:mysql: localhost keystone ; static final string user root ; static final string pass ; public static void main string args connection conn null; statement stmt null; try class.forname com.mysql.jdbc.driver ; conn drivermanager.getconnection db_url,user,pass ; stmt conn.createstatement ; string sql; sql select name,id,password from user ; resultset rs stmt.executequery sql ; while rs.next string first rs.getstring name ; string last rs.getstring id ; string pwd rs.getstring password ; if siju .equals first if cusatse .equals pwd system.out.println login ok ; system.out.print username: first ; system.out.println , id: last ; system.out.println , password: pwd ; rs.close ; stmt.close ; conn.close ; catch sqlexception se se.printstacktrace ; catch exception e e.printstacktrace ; finally try if stmt!=null stmt.close ; catch sqlexception try if conn!=null conn.close ; catch sqlexception se se.printstacktrace ; system.out.println goodbye! ;"
    },
    {
        "url": "https://stackoverflow.com/questions/29359431",
        "text": "from novaclient.v1_1 import client as nova_client from pprint import pprint self.__nova_client nova_client.client myusername , mypassword , mytenantname , service_type= , for server in self.__nova_client.servers.list : pprint server"
    },
    {
        "url": "https://stackoverflow.com/questions/29433199",
        "text": "file open files req.json , w file.write json_data file.close"
    },
    {
        "url": "https://stackoverflow.com/questions/29600124",
        "text": "if containername!=null objectname!=null blobmetadata metadata blobstore.blobmetadata containername, objectname ; if metadata usermetadata metadata.getusermetadata ; contentmetadata contmetadata metadata.getcontentmetadata ; system.out.println object size contmetadata.getcontentlength ;"
    },
    {
        "url": "https://stackoverflow.com/questions/29639506",
        "text": "import greenlet greenlet_version getattr greenlet, __version__ , none print str greenlet_version"
    },
    {
        "url": "https://stackoverflow.com/questions/29842843",
        "text": "client.samples instance .list"
    },
    {
        "url": "https://stackoverflow.com/questions/29900246",
        "text": "run runabove app_key, app_secret, consumer_key token run.tokens.get"
    },
    {
        "url": "https://stackoverflow.com/questions/29904022",
        "text": "param string string write host url is: write host dest is:"
    },
    {
        "url": "https://stackoverflow.com/questions/30072069",
        "text": "osclient os osfactory.builder .credentials admin , secret .tenantname admin .authenticate ; system.out.println os.identity .tenants .list ; get only part of my tenant list system.out.println os.identity .users .list ; get empty list system.out.println os.identity .services .list ; also get empty list"
    },
    {
        "url": "https://stackoverflow.com/questions/30072069",
        "text": "osclient os osfactory.builder .credentials admin , secret .tenantname admin .perspective facing.admin .authenticate ;"
    },
    {
        "url": "https://stackoverflow.com/questions/30327935",
        "text": "from keystone.openstack.common import log as logging from keystone.common import dependency from keystone import config from keystone import exception from keystone.common import cache from keystone.common import wsgi assignment_api class projectsbydemand wsgi.middleware : def __init__ self, app, conf : self.conf conf self.app app self.internal_l admin , neutron , glance , cinder , nova self.log logging.getlogger __name__ def process_request self, environ, start_response : auth self.get_username environ if auth is not none: if auth is not self.internal_l: self.log.debug middleware debug: authenticating with: auth project_ref self.assignment_api.get_project_by_name username, self.log.debug middleware debug: project ref is: , project_ref return self.app environ, start_response"
    },
    {
        "url": "https://stackoverflow.com/questions/30500301",
        "text": "set string new hashset string ; for network network :getosclinet .networking .network .list ; string phyiscal network.getproviderphynet ; if stringutils.isnotblank phyiscal physicalnetworks.add phyiscal ;"
    },
    {
        "url": "https://stackoverflow.com/questions/30705133",
        "text": "import urllib,httplib,json from urlparse import urlparse user lucy url ports auth params urllib.urlencode headers x storage user :user, content type : application json conn httplib.httpconnection url conn.request get , response conn.getresponse data response.read print response"
    },
    {
        "url": "https://stackoverflow.com/questions/30881636",
        "text": "self.timeout default_timeout the config file if self.overlord_config.socket_timeout self.timeout self.overlord_config.socket_timeout commandline if timeout: self.timeout timeout"
    },
    {
        "url": "https://stackoverflow.com/questions/30881636",
        "text": "default_timeout none"
    },
    {
        "url": "https://stackoverflow.com/questions/30881636",
        "text": "class overlord object : def __init__ self, server_spec, init_ssl=true, :"
    },
    {
        "url": "https://stackoverflow.com/questions/31122554",
        "text": "servercreatebuilder.addnetworkport 0a44eedc"
    },
    {
        "url": "https://stackoverflow.com/questions/31245421",
        "text": "auth_url= url username , pass , tenant_id= sess session.session auth=auth,verify=false token auth.get_token sess cclient client.get_client 2, data cclient.samples.list meter_name cpu_util thing msg cols for row in data: col col x : row.timestamp, y : row.counter_volume cols.append col msg columns cols thing message msg print json.dumps thing,"
    },
    {
        "url": "https://stackoverflow.com/questions/31284941",
        "text": "session login_to_keystone user= admin something use token nova_client get_nova_client session servers array holds dictionaries with server, user and tenant ids as strings e.g. server_id : , tentant_id : , user_id: for server in servers: server_obj nova_client.servers.get server.server_id ...do stuff with server_obj read data from it, delete,... ..."
    },
    {
        "url": "https://stackoverflow.com/questions/31284941",
        "text": "from keystoneclient.v2_0 import client as keystone_client from keystoneclient import session from novaclient import client as nova_client url is the admin endpoint keystone keystone_client.client token= my token , key_session session.session auth=keystone nova nova_client.client 2, s assume the servers array is already populated for server in servers: server_obj nova.servers.get server.server_id happens here"
    },
    {
        "url": "https://stackoverflow.com/questions/31284941",
        "text": "from keystoneclient.auth.identity import from keystoneclient import session from novaclient import client as nova_client auth admin , my_secrete , tenant_name= the admin s tenant auth_session session.session auth=auth nova nova_client.client 2, for server in servers: ... do stuff like nova.servers.get some id"
    },
    {
        "url": "https://stackoverflow.com/questions/31326423",
        "text": "server nova.servers.create name cirros_vm , image image.id, flavor flavor.id"
    },
    {
        "url": "https://stackoverflow.com/questions/31326423",
        "text": "server nova.servers.create name api_cir_test , image image.id, flavor flavor.id,"
    },
    {
        "url": "https://stackoverflow.com/questions/31400072",
        "text": "storedobject object container.getobject dog.png ; object.uploadobject new file dog.png ;"
    },
    {
        "url": "https://stackoverflow.com/questions/31411266",
        "text": "admin_token=e746971040657101bb1e"
    },
    {
        "url": "https://stackoverflow.com/questions/31537390",
        "text": "from neutronclient.neutron import client neutron client.client 2.0 endpoint_url=neutron_endpoint, help neutron.update_port"
    },
    {
        "url": "https://stackoverflow.com/questions/31552280",
        "text": "accountconfig config new accountconfig ; config.setusername username ; config.setpassword password ; config.setauthurl authurl ; config.settenantname tenantname ; account account new accountfactory config .createaccount ;"
    },
    {
        "url": "https://stackoverflow.com/questions/31593354",
        "text": "import swiftclient user swift key password conn swiftclient.client.connection tenant_name service , auth_version : container_name my new container conn.put_container container_name with open hello.txt , r as hello_file: conn.put_object container_name, hello.txt , hello_file.read , content_type= plain"
    },
    {
        "url": "https://stackoverflow.com/questions/31949728",
        "text": "nova.floating_ips.list"
    },
    {
        "url": "https://stackoverflow.com/questions/32084230",
        "text": "import hmac from hashlib import from time import time method get host duration_in_seconds duration for which the url is valid expires int time duration_in_seconds path auth_test testcon test.txt key secret hmac_body method, expires, path hmac_body hmac.new key, hmac_body, .hexdigest sig hmac.new key, hmac_body, .hexdigest rest_uri host path ?temp_url_sig= sig temp_url_expires= expires print rest_uri"
    },
    {
        "url": "https://stackoverflow.com/questions/32158900",
        "text": "vm_slave_first_disk_mb=35535 was vm_slave_second_disk_mb=35535 was vm_slave_third_disk_mb=35535 was"
    },
    {
        "url": "https://stackoverflow.com/questions/32356773",
        "text": "import org.javaswift.joss.client.factory.accountconfig; import org.javaswift.joss.client.factory.accountfactory; import org.javaswift.joss.client.factory.authenticationmethod; import org.javaswift.joss.model.account; import org.javaswift.joss.model.container; public class private static string serverip private static string username admin ; private static string password ; get x auth token from this url private static string keystoneurl private static string tenantname admin ; private static string swifttenantid ; communicate with this url to work with swift private static string swiftpublicurl public static void main string args accountconfig config new accountconfig ; config.setdisablesslvalidation true ; config.setusername username ; config.setpassword password ; config.setauthurl keystoneurl ; config.settenantname tenantname ; config.setauthenticationmethod authenticationmethod.keystone ; account account new accountfactory config .createaccount ;"
    },
    {
        "url": "https://stackoverflow.com/questions/32419559",
        "text": "log_name swift log_facility log_local0 log_level debug"
    },
    {
        "url": "https://stackoverflow.com/questions/32577912",
        "text": "vagrant.configure 2 do config.vm.box dummy config.vm.synced_folder . , vagrant , disabled: true config.ssh.private_key_path home xxxxx config.vm.provider :openstack do os.username xxx os.api_key xxx os.flavor os.image os.endpoint os.keypair_name xxx os.floating_ip :auto os.floating_ip_pool xxx os.ssh_username ubuntu os.network xxx os.server_name testinstant end end"
    },
    {
        "url": "https://stackoverflow.com/questions/32619211",
        "text": "permissions list getattr instances_panel, permissions , permissions.append openstack.roles.admin instances_panel.permissions tuple permissions"
    },
    {
        "url": "https://stackoverflow.com/questions/32619211",
        "text": "permissions.append keystone.roles.my_custom_role"
    },
    {
        "url": "https://stackoverflow.com/questions/32645933",
        "text": "import swiftclient import os import sys import subprocess user user key key url url conn swiftclient.connection input_file_name test.txt def write_error_log path : input file path this module writes the path which is failed to create or write during downloading. with open log.txt , w as f: f.write output not created for path def main : main method is used to read the entire text file and creates the file and folder based on the returned values during reading. it creats an log file when script fails to create the file. for path in open input_file_name, r : print writing file , path download_command swift a u k download .format url, user, key, container_name, path try: return_status_code subprocess.call download_command, if return_status_code: write_error_log path except: write_error_log path if __name__ __main__ : container_name sys.argv 1 main"
    },
    {
        "url": "https://stackoverflow.com/questions/32665577",
        "text": "import swiftclient import keystoneclient conn swiftclient.connection ip account_name:username , serverpassword , auth_version= for container in conn.get_account 1 : print container name"
    },
    {
        "url": "https://stackoverflow.com/questions/32777285",
        "text": "osclient os osfactory.builder .credentials username,password .tenantname admin .perspective facing.public .authenticate ;"
    },
    {
        "url": "https://stackoverflow.com/questions/32786418",
        "text": "res requests.put publicurl+ x auth token : token , file : open toupload, rb"
    },
    {
        "url": "https://stackoverflow.com/questions/32808809",
        "text": "from cloudinit import util def handle name, cfg, cloud, log, _args : if util.get_cfg_option_bool cfg, preserve_hostname , false : log.debug configuration option preserve_hostname is set, not setting the hostname in module , name return hostname, fqdn util.get_hostname_fqdn cfg, cloud try: log.debug setting the hostname to , fqdn, hostname cloud.distro.set_hostname hostname, fqdn except exception: util.logexc log, failed to set the hostname to , fqdn, hostname raise"
    },
    {
        "url": "https://stackoverflow.com/questions/33118795",
        "text": "var cloudidentity new cloudidentitywithproject projectname , username , password , ; var identityprovider new openstackidentityprovider new cloudidentity ; var token identityprovider.gettoken null ;"
    },
    {
        "url": "https://stackoverflow.com/questions/33118795",
        "text": "var cloudidentity new cloudidentity username apikey , ; var identityprovider new softlayeropenstackidentityprovider new cloudidentity ; var token identityprovider.gettoken null ;"
    },
    {
        "url": "https://stackoverflow.com/questions/33118795",
        "text": "var cloudfilesprovider new cloudfilesprovider identityprovider ; var containers cloudfilesprovider.listcontainers ; var stream new memorystream ; cloudfilesprovider.getobject testcontainer , testfile.dat , stream ;"
    },
    {
        "url": "https://stackoverflow.com/questions/33137277",
        "text": "neutron.list_floatingips .get floatingips"
    },
    {
        "url": "https://stackoverflow.com/questions/33137277",
        "text": "neutron.list_floatingips filter_value= floating_ip_address : .get floatingips"
    },
    {
        "url": "https://stackoverflow.com/questions/33164049",
        "text": "context contextbuilder.newbuilder openstack nova .credentials tenantname:username , password .modules immutableset. module of new , new sshjsshclientmodule .buildview computeservicecontext.class ; service context.getcomputeservice ; for computemetadata node: service.listnodes system.out.println node: node.getid ;"
    },
    {
        "url": "https://stackoverflow.com/questions/33171218",
        "text": "from keystoneclient import session from keystoneclient.v3 import client from keystoneclient.auth.identity import password username= ,password= ,user_domain_name= idm auth sess session.session auth=auth keystone client.client session=sess keystone.users.list"
    },
    {
        "url": "https://stackoverflow.com/questions/33234835",
        "text": "get_version_v2 got an unexpected keyword argument auth"
    },
    {
        "url": "https://stackoverflow.com/questions/33420300",
        "text": "import ceilometerclient.client cclient ceilometerclient.client.get_client 2, os_username= , os_password= , os_tenant_name= blahblah query dict resource_id , eq , ls cclient.meters.list q=query"
    },
    {
        "url": "https://stackoverflow.com/questions/33420300",
        "text": "pandas.dataframe ls, user_id , name , resource_id , source , meter_id , project_id , type , unit"
    },
    {
        "url": "https://stackoverflow.com/questions/33569951",
        "text": "service fog::storage.new :provider openstack , openstack fog provider :openstack_username username, your openstack username :openstack_api_key password, your openstack password :openstack_auth_url"
    },
    {
        "url": "https://stackoverflow.com/questions/33637344",
        "text": "neutronapi contextbuilder.newbuilder openstack neutron .credentials username, api_key .endpoint auth_url .modules modules .buildapi neutronapi.class ;"
    },
    {
        "url": "https://stackoverflow.com/questions/33698861",
        "text": "nova.servers.list"
    },
    {
        "url": "https://stackoverflow.com/questions/33698861",
        "text": "nova.flavors.list"
    },
    {
        "url": "https://stackoverflow.com/questions/33708507",
        "text": "log.info context.tenant_id"
    },
    {
        "url": "https://stackoverflow.com/questions/33720318",
        "text": "alias"
    },
    {
        "url": "https://stackoverflow.com/questions/33720318",
        "text": "alias"
    },
    {
        "url": "https://stackoverflow.com/questions/34137025",
        "text": "public static arraylist url getfilelist url arraylist url serverdir new arraylist ; try apacheurllister new apacheurllister ; serverdir.addall lister1.listall ; system.out.println serverdir ; catch exception e log.e getfilelist , listing url url ; e.printstacktrace ; return serverdir;"
    },
    {
        "url": "https://stackoverflow.com/questions/34192462",
        "text": "admin_token mysql: keystone:keystone_dbpass@controller1 keystone"
    },
    {
        "url": "https://stackoverflow.com/questions/34201283",
        "text": "from libcloud.compute.types import provider from libcloud.compute.providers import get_driver import libcloud.security auth_usr auth_pass auth_url project_name poc region_name libcloud.security.verify_ssl_cert false provider get_driver provider.openstack conn provider auth_usr, auth_pass, ex_force_auth_url=auth_url, ex_force_auth_version= 2.0_password , ex_tenant_name=project_name, ex_force_service_region=region_name images conn.list_images for image in images: print image"
    },
    {
        "url": "https://stackoverflow.com/questions/34259099",
        "text": "httpconnectionpool vanillacluster vanillacluster slave vanilla , : max retries exceeded with url: user.name=hadoop vanillacluster master vanilla caused by newconnectionerror requests.packages.urllib3.connection.httpconnection object at failed to establish new connection: errno name or service not known ,"
    },
    {
        "url": "https://stackoverflow.com/questions/34318663",
        "text": "broker.id=0 advertised.listeners=plaintext: host.name=10.0.0.92 advertised.host.name=172.22.0.127 num.network.threads=3 num.io.threads=8 socket.send.buffer.bytes=102400 socket.receive.buffer.bytes=102400 socket.request.max.bytes=104857600 log.dirs= log kafka num.partitions=2 num.recovery.threads.per.data.dir=1 log.retention.hours=1 log.segment.bytes=1073741824 log.retention.check.interval.ms=300000 log.cleaner.enable=false zookeeper.connect=10.0.0.92:2181,10.0.0.93:2181,10.0.0.94:2181 zookeeper.connection.timeout.ms=6000 delete.topic.enable=true"
    },
    {
        "url": "https://stackoverflow.com/questions/34762147",
        "text": "true allow_migrate_to_same_host"
    },
    {
        "url": "https://stackoverflow.com/questions/34891393",
        "text": "computeservicecontext computecontext contextbuilder.newbuilder credentials.getprovidername .endpoint credentials.getresourceendpoint .credentials cred, passwd .modules immutableset. module of new sshjsshclientmodule .overrides openstackpropeties .buildview computeservicecontext.class ; templatebuilder.imageid instance.getimageid ; templatebuilder.hardwareid instance.getinstancetype ; options.as novatemplateoptions.class .nodenames new arraylist string arrays.aslist instance .getinstancename ; options.as novatemplateoptions.class .networks instance.getnetworktype ; templatebuilder.locationid regionone ; build templatebuilder.build ; set extends nodemetadata nodemetadatas computeservice.createnodesingroup securitygroup.name , instancecount, build ;"
    },
    {
        "url": "https://stackoverflow.com/questions/34921177",
        "text": "volume cinder.volumes.create 5, test , ..."
    },
    {
        "url": "https://stackoverflow.com/questions/34921177",
        "text": "while volume.status available : print volume status volume.status time.sleep 1.0"
    },
    {
        "url": "https://stackoverflow.com/questions/34921177",
        "text": "volume.sync"
    },
    {
        "url": "https://stackoverflow.com/questions/34930870",
        "text": "bytesource payload files.asbytesource tempfile ; blob blob blobstore.blobbuilder objectname .payload payload .contentdisposition attachment; payload.hash hashing.md5 .contentlength payload.size .contenttype mediatype.octet_stream.tostring .build ; system.out.println blob.getmetadata .getname ; upload the blob string etag blobstore.putblob jclouds example , blob, multipart ;"
    },
    {
        "url": "https://stackoverflow.com/questions/34980440",
        "text": "while lt ; do if eq then echo divisible by exit fi done echo is prime number"
    },
    {
        "url": "https://stackoverflow.com/questions/35032533",
        "text": "from novaclient import client import json kwargs tenant_name : admin , username : admin , password : password , establish the connection keystone keystone client.client 2 admin , , admin , server_list keystone.servers.list search_opts= tenant_id : print server_list"
    },
    {
        "url": "https://stackoverflow.com/questions/35111837",
        "text": "from oslo_config import cfg core_opts cfg.boolopt allow_bulk , allow the usage of the bulk api , cfg.boolopt allow_pagination , allow the usage of the pagination , cfg.stropt api_paste_config , api paste.ini , the api paste config file to use , cfg.stropt api_extensions_path , , the path for api extensions ,"
    },
    {
        "url": "https://stackoverflow.com/questions/35347057",
        "text": "osclient os osfactory.builderv3 .endpoint auth_url .credentials username, password .scopetoproject projectident, domainident .authenticate ; exception thrown by application class org.openstack4j.connectors.jersey2.httpexecutorserviceimpl.invoke:58 org.openstack4j.api.exceptions.connectionexception: org.apache.cxf.interceptor.fault: no message body writer has been found for class org.openstack4j.openstack.identity.domain.v3.keystoneauth, contenttype: application json at org.openstack4j.connectors.jersey2.httpexecutorserviceimpl.invoke at org.openstack4j.connectors.jersey2.httpexecutorserviceimpl.execute at org.openstack4j.core.transport.internal.httpexecutor.execute at org.openstack4j.openstack.internal.osauthenticator.authenticatev3 at org.openstack4j.openstack.internal.osauthenticator.invoke at org.openstack4j.openstack.client.osclientbuilder$clientv3.authenticate at org.openstack4j.openstack.client.osclientbuilder$clientv3.authenticate at com.ibm.sample.objectstorageservice. objectstorageservice.java:36 at wasdev.sample.servlet.simpleservlet.doget simpleservlet.java:30 at javax.servlet.http.httpservlet.service httpservlet.java:687 at javax.servlet.http.httpservlet.service httpservlet.java:790 at com.ibm.ws.webcontainer.servlet.servletwrapper.service servletwrapper.java:1290 at internal classes caused by: javax.ws.rs.processingexception: org.apache.cxf.interceptor.fault: no message body writer has been found for class org.openstack4j.openstack.identity.domain.v3.keystoneauth, contenttype: application json at org.apache.cxf.jaxrs.client.webclient.doresponse webclient.java:1206 at internal classes at org.openstack4j.connectors.jersey2.httpcommand.execute at org.openstack4j.connectors.jersey2.httpexecutorserviceimpl.invokerequest at org.openstack4j.connectors.jersey2.httpexecutorserviceimpl.invoke ... more caused by: org.apache.cxf.interceptor.fault: no message body writer has been found for class org.openstack4j.openstack.identity.domain.v3.keystoneauth, contenttype: application json at org.apache.cxf.jaxrs.client.webclient$bodywriter.dowritebody webclient.java:1286 ... more caused by: javax.ws.rs.processingexception: no message body writer has been found for class org.openstack4j.openstack.identity.domain.v3.keystoneauth, contenttype: application json at org.apache.cxf.jaxrs.client.abstractclient.reportmessagehandlerproblem abstractclient.java:758 ... more caused by: org.codehaus.jackson.map.jsonmappingexception: was java.lang.nullpointerexception through reference chain: org.openstack4j.openstack.identity.domain.v3.keystoneauth at org.codehaus.jackson.map.jsonmappingexception.wrapwithpath jsonmappingexception.java:215 ... more caused by: java.lang.nullpointerexception: at org.openstack4j.openstack.identity.domain.v3.keystoneauth.getid at sun.reflect.nativemethodaccessorimpl.invoke0 native method at sun.reflect.nativemethodaccessorimpl.invoke unknown source at sun.reflect.delegatingmethodaccessorimpl.invoke unknown source at java.lang.reflect.method.invoke unknown source at org.codehaus.jackson.map.ser.beanpropertywriter.get beanpropertywriter.java:285"
    },
    {
        "url": "https://stackoverflow.com/questions/35439056",
        "text": "containerapi.list"
    },
    {
        "url": "https://stackoverflow.com/questions/35439056",
        "text": "import java.io.closeable; import java.io.ioexception; import java.util.set; import org.jclouds.contextbuilder; import org.jclouds.openstack.swift.v1.swiftapi; import org.jclouds.openstack.swift.v1.domain.container; import org.jclouds.openstack.swift.v1.features.containerapi; import com.google.common.io.closeables; public class jcloudsswift implements closeable private swiftapi swiftapi; public static void main string args jcloudsswift jcloudsswift new jcloudsswift ; try jcloudsswift.listcontainers ; jcloudsswift.close ; catch exception e e.printstacktrace ; finally try jcloudsswift.close ; catch ioexception e e.printstacktrace ; public jcloudsswift string provider openstack swift ; string identity tenantname:username ; string credential password ; string endpoint swiftapi contextbuilder.newbuilder provider .endpoint endpoint .credentials identity, credential .buildapi swiftapi.class ; private void listcontainers string region us east ; containerapi containerapi swiftapi.getcontainerapi region ; set container containers containerapi.list .toset ; for container container containers system.out.println container ; public void close throws ioexception closeables.close swiftapi, true ;"
    },
    {
        "url": "https://stackoverflow.com/questions/36330052",
        "text": "public void role_create string name role role os.identity .roles .create builders.role .name name .build ;"
    },
    {
        "url": "https://stackoverflow.com/questions/36330052",
        "text": "public void role_create string name role role os.identity .roles .create name ;"
    },
    {
        "url": "https://stackoverflow.com/questions/36330052",
        "text": "public role create string name checknotnull name ; return post keystonerole.class, uri os sadm roles .entity keystonerole.builder .name name .build .execute ;"
    },
    {
        "url": "https://stackoverflow.com/questions/36412175",
        "text": "osclient os pass .tenantname admin .authenticate .perspective facing.admin ; tenant tenant os.identity .tenants .get 0374e503158f4d75ad3342185e06f218"
    },
    {
        "url": "https://stackoverflow.com/questions/36638045",
        "text": "def createnetwork self, course_id, network_name, subnets : data network name utils.net_name course_id, network_name , admin_state_up true netw self.neutron.create_network body data net_dict netw network network_id net_dict id subnets subnet_data subnets subnet_data subnets .append cidr subnets, ip_version network_id network_id self.neutron.create_subnet body subnet_data return network_id"
    },
    {
        "url": "https://stackoverflow.com/questions/36638045",
        "text": "network net.createnetwork course_id course.id, network_name name, subnets subnet"
    },
    {
        "url": "https://stackoverflow.com/questions/36703219",
        "text": "from libcloud.compute.types import provider from libcloud.compute.providers import get_driver import libcloud.security libcloud.security.verify_ssl_cert false openstack get_driver provider.openstack driver openstack admin , password , ex_force_auth_version= 2.0_password driver.list_images"
    },
    {
        "url": "https://stackoverflow.com/questions/36805394",
        "text": "cfg.intopt cluster_member_count , number of members in vertica cluster. ,"
    },
    {
        "url": "https://stackoverflow.com/questions/36805394",
        "text": "cfg.intopt min_cluster_member_count , minimum number of members in vertica cluster. , deprecated_name= , deprecated_group= ,"
    },
    {
        "url": "https://stackoverflow.com/questions/36904792",
        "text": "node self.conn.nodedriver.create_node name utils.vm_name course_id, names i , idx , image images i , size sizes i , networks network i , ex_keyname key_pair.name self.nodes.append node"
    },
    {
        "url": "https://stackoverflow.com/questions/37032532",
        "text": "auth_uri auth_host"
    },
    {
        "url": "https://stackoverflow.com/questions/37124940",
        "text": ""
    },
    {
        "url": "https://stackoverflow.com/questions/37124940",
        "text": "access maccess maccount.authenticate ; joss.model.access"
    },
    {
        "url": "https://stackoverflow.com/questions/37124940",
        "text": "maccess.gettoken"
    },
    {
        "url": "https://stackoverflow.com/questions/37124940",
        "text": "maccess.gettoken"
    },
    {
        "url": "https://stackoverflow.com/questions/37132119",
        "text": "os openstack::connection.create ... container os.create_container container_name container.set_metadata x container read .r:*"
    },
    {
        "url": "https://stackoverflow.com/questions/37401844",
        "text": "import swiftclient swift create the swift container swift.put_container cute cats upload the object with open cat.jpg , rb as f: file_data f.read swift.put_object cute cats , cat.jpg , file_data list the containers print swift.head_account list the objects in the cute cats containers print swift.head_container cute cats"
    },
    {
        "url": "https://stackoverflow.com/questions/37519045",
        "text": "import swiftclient conn swiftclient.connection key= ,authurl= ,auth_version= 3 : project_id , user_id : user_id , region_name : region container_name containername file_name file.sqlite with open file_name, rb as sqlite_file: conn.put_object container_name,file_name,sqlite_file"
    },
    {
        "url": "https://stackoverflow.com/questions/37649119",
        "text": "from keystoneclient.auth.identity import from keystoneclient import session from keystoneclient.v3 import client as auth_url token auth auth_url=auth_url, sess session.session auth=auth ks session=sess project_list t.name for in ks.projects.list user=sess.get_user_id print project_list"
    },
    {
        "url": "https://stackoverflow.com/questions/37649119",
        "text": "from keystoneclient import session from keystoneclient.v3 import client from keystoneclient.auth.identity import auth sess session.session auth=auth keystone client.client session=sess keystone.users.list"
    },
    {
        "url": "https://stackoverflow.com/questions/37649925",
        "text": "blob blob blobstore.getblob container , object ; inputstream in blob.getpayload .getinput ; file targetfile new file filepath ; fileutils.*copyinputstreamtofile* targetfile ;"
    },
    {
        "url": "https://stackoverflow.com/questions/37944108",
        "text": "upload.http url: uploadlink.url, path method: post , data: redirect: uploadlink.redirect, max_file_size: uploadlink.max_file_size, max_file_count: uploadlink.max_file_count, expires: uploadlink.expires, signature: uploadlink.sig, file: file"
    },
    {
        "url": "https://stackoverflow.com/questions/38241561",
        "text": "import getpass from neutronclient.v2_0 import client username getpass.getpass tenant_name auth_url neutron client.client username=username, password tenant_name tenant_name, auth_url auth_url, netw neutron.list_networks print netw"
    },
    {
        "url": "https://stackoverflow.com/questions/38448305",
        "text": "usr bin python import eventlet eventlet.monkey_patch def main : import pydevd pydevd.settrace 10.84.101.215 print done if __name__ __main__ : main"
    },
    {
        "url": "https://stackoverflow.com/questions/38448305",
        "text": "eventlet.monkey_patch"
    },
    {
        "url": "https://stackoverflow.com/questions/38448305",
        "text": "eventlet.monkey_patch os=false,"
    },
    {
        "url": "https://stackoverflow.com/questions/38461030",
        "text": "sorted sc._conf.getall"
    },
    {
        "url": "https://stackoverflow.com/questions/38476799",
        "text": "neutron.list_ports"
    },
    {
        "url": "https://stackoverflow.com/questions/38657243",
        "text": "neutron.list_ports ports"
    },
    {
        "url": "https://stackoverflow.com/questions/38729696",
        "text": "private void copy string origincontainer, string origin, string destinationcontainer, string destination try url url new url storageurl delimiter destinationcontainer delimiter destination ; httpurlconnection conn httpurlconnection url.openconnection ; conn.setdoinput true ; conn.setdooutput true ; conn.setrequestmethod put ; conn.setrequestproperty x auth token , authtoken ; conn.setrequestproperty x copy from , delimiter origincontainer delimiter origin ; conn.setrequestproperty content length , ; if conn.getresponsecode httpurlconnection.http_created system.err.println while copying the object: conn.getresponsecode ; conn.disconnect ; catch malformedurlexception e system.err.println while copying the object: e.getmessage ; catch ioexception e system.err.println while copying the object: e.getmessage ;"
    },
    {
        "url": "https://stackoverflow.com/questions/38764146",
        "text": "def create_server conn : print create server: image conn.compute.find_image cirros flavor conn.compute.find_flavor m1.tiny network conn.network.find_network test server conn.compute.create_server test , image_id=image.id, flavor_id=flavor.id, private : addr :4 addr :4 uuid : network.id server conn.compute.wait_for_server server"
    },
    {
        "url": "https://stackoverflow.com/questions/38838595",
        "text": "class include controller_ceph include keystone include keystone::config include keystone::user keystone_user glance : ensure present,"
    },
    {
        "url": "https://stackoverflow.com/questions/39011757",
        "text": "endpoint"
    },
    {
        "url": "https://stackoverflow.com/questions/39055096",
        "text": "os osfactory.builderv3 .scopetoproject identifier.byid 1435221d37fd41699101bd739fe4375b .credentials admin , openstack , identifier.byname .authenticate ;"
    },
    {
        "url": "https://stackoverflow.com/questions/39055096",
        "text": "os osfactory.builderv3 .credentials admin , openstack , identifier.byname .authenticate ;"
    },
    {
        "url": "https://stackoverflow.com/questions/39055096",
        "text": "userid os.gettoken .getuser .getid ;"
    },
    {
        "url": "https://stackoverflow.com/questions/39055096",
        "text": "os.identity .users .listuserprojects userid"
    },
    {
        "url": "https://stackoverflow.com/questions/39055096",
        "text": "token.getcatalog"
    },
    {
        "url": "https://stackoverflow.com/questions/39055096",
        "text": "getcatelog"
    },
    {
        "url": "https://stackoverflow.com/questions/39281790",
        "text": "def download self, session : download the data contained in an image todo briancurtin : this method should probably offload the get operation into another thread or something of that nature. url utils.urljoin self.base_path, self.id, file resp session.get url, endpoint_filter=self.service checksum resp.headers content md5 digest hashlib.md5 .hexdigest if digest checksum: raise exceptions.invalidresponse checksum mismatch return resp.content"
    },
    {
        "url": "https://stackoverflow.com/questions/39371764",
        "text": "token keystone.auth_ref token id"
    },
    {
        "url": "https://stackoverflow.com/questions/39409401",
        "text": "from keystoneclient.v3 import client as from novaclient import client as nova_client from import session username= ,password= , user_domain_name= project_domain_name= project_name= , token keystone.auth_token sess session.session auth=keystone, nova nova_client.client self.nova_version, auth_token=token, tenant_id=tenant_id, nova.servers.delete instance_id"
    },
    {
        "url": "https://stackoverflow.com/questions/39461840",
        "text": "alarm alarm projectclient .telemetry .alarms .create builders.alarm .name alarmname serverid .description alarmname high .type alarm.type.threshold .thresholerule rule .alarmactions actions .isenabled true .build ;"
    },
    {
        "url": "https://stackoverflow.com/questions/39548263",
        "text": "from keystoneclient.auth.identity import from keystoneclient import session from keystoneclient.v3 import client from novaclient import client auth i soltest , i soltest , project_id= user_domain_id= 853ee41e624e4a70962b225bd1dbda6e sess session.session auth=auth client.client version= nova client.client 2.1, nova.flavors.list"
    },
    {
        "url": "https://stackoverflow.com/questions/39676292",
        "text": "var gulp require gulp , extracttranslate require gulp angular translate extractor ; gulp.task i18n function var . assets translations ; return gulp.src !.. shared *.tpl.html , !.. shared *.js , !.. shared *.js , .. *.tpl.html , .. *.js , . *.tpl.html , . *.js , . *.tpl.html , . *.js .pipe extracttranslate defaultlang: en.i18n lang: en.i18n ru.i18n dest: safemode: false, do not delete old translations stringifyoptions: true force json to be sorted .pipe gulp.dest i18ndest ;"
    },
    {
        "url": "https://stackoverflow.com/questions/39878828",
        "text": "from novaclient import client from import session from import def setup_nova creds : creates nova instance with which we can leverage the openstack virtualization platform. :param creds: dictionary containing the authorization url, username, password, version, and project id associated with the openstack cluster. :type creds: dict password username=creds , password , user_domain_name= auth auth_url=creds auth_url auth_methods= , project_id=creds sess session.session auth=auth nova client.client creds version , nova.authenticate return nova"
    },
    {
        "url": "https://stackoverflow.com/questions/39878828",
        "text": "nova.authenticate"
    },
    {
        "url": "https://stackoverflow.com/questions/40077854",
        "text": "def rand_ip mask=false this uses the test net range of reserved ip addresses. test_net_3 address test_net_3 six.text_type random.randint 0, if mask: address .join address, six.text_type random.randrange 24, return address"
    },
    {
        "url": "https://stackoverflow.com/questions/40188453",
        "text": "def heat_id heat,stack_name : stack_id str heat.stacks.get stack_name .id"
    },
    {
        "url": "https://stackoverflow.com/questions/40269452",
        "text": "create"
    },
    {
        "url": "https://stackoverflow.com/questions/40269452",
        "text": "create name, image, flavor, reservation_id=none, min_count=none, max_count=none, security_groups=none, key_name=none, availability_zone=none, block_device_mapping=none, block_device_mapping_v2=none, scheduler_hints=none, config_drive=none, disk_config=none, create boot new server. parameters: name something to name the server. image the image to boot with. flavor the flavor to boot onto. meta dict of arbitrary key value metadata to store for this server. maximum of five entries is allowed, and both keys and values must be characters or less. files dict of files to overrwrite on the server upon boot. keys are file names i.e. and values are the file contents either as string or as file like object . maximum of five entries is allowed, and each file must be or less. userdata user data to pass to be exposed by the metadata server this can be file type object as well or string. reservation_id uuid for the set of servers being requested. key_name optional extension name of previously created keypair to inject into the instance. availability_zone name of the availability zone for instance placement. block_device_mapping optional extension dict of block device mappings for this server. block_device_mapping_v2 optional extension dict of block device mappings for this server. nics optional extension an ordered list of nics to be added to this server, with information about connected networks, fixed ips, port etc. scheduler_hints optional extension arbitrary key value pairs specified by the client to help boot an instance config_drive optional extension value for config drive either boolean, or volume id disk_config optional extension control how the disk is partitioned when the server is created. possible values are or"
    },
    {
        "url": "https://stackoverflow.com/questions/40269452",
        "text": "create"
    },
    {
        "url": "https://stackoverflow.com/questions/40269452",
        "text": "create"
    },
    {
        "url": "https://stackoverflow.com/questions/40385145",
        "text": "os.objectstorage.objects.put containername, objectname, payloads.create somefile"
    },
    {
        "url": "https://stackoverflow.com/questions/40857170",
        "text": "class apirouter wsgi.router : def factory cls, global_config, : return cls def __init__ self, : do something. not using local_config"
    },
    {
        "url": "https://stackoverflow.com/questions/40857170",
        "text": "api_router apirouter"
    },
    {
        "url": "https://stackoverflow.com/questions/40927209",
        "text": "def subnet_create self, network_id, : params name : kwargs.get name , cidr : kwargs.get cidr , ip_version : enable_dhcp : true body subnet : network_id : network_id body subnet .update params return self.neutron_client.create_subnet body=body .get subnet"
    },
    {
        "url": "https://stackoverflow.com/questions/40927209",
        "text": "compute_srv self.nova_cli.instance_create compute_inst name , compute_inst image , compute_inst flavor , key_name=compute_inst , user_data=compute_inst , security_groups=compute_inst , nics"
    },
    {
        "url": "https://stackoverflow.com/questions/40929969",
        "text": "swiftapi swiftapi contextbuilder.newbuilder transient .endpoint endpoint .credentials user, password .modules modules .overrides overrides .buildapi swiftapi.class ;"
    },
    {
        "url": "https://stackoverflow.com/questions/41042654",
        "text": "glance importutils.import_any openstack_dashboard.api.glance , horizon.api.glance def _get_images self, request, filter : try: images, _more glance.image_list_detailed request, except exception: images exceptions.handle request, _ unable to retrieve images with filter filter return images def _get_public_images self, request : filter is_public : true, status : active return self._get_images request, filter def _get_tenant_images self, request : filter owner : request.user.tenant_id, status : active return self._get_images request, filter"
    },
    {
        "url": "https://stackoverflow.com/questions/41282286",
        "text": "sc.textfile swift: container.myacct file.xml"
    },
    {
        "url": "https://stackoverflow.com/questions/41359051",
        "text": "flavors_list nova_client.flavors.list print_flavors flavors_list print nova_client.servers.list nova_client.flavors.create name , ram vcpus disk auto , rxtx_factor=1.0, is_public=true"
    },
    {
        "url": "https://stackoverflow.com/questions/41638940",
        "text": "import org.jclouds.openstack.swift.v1.swiftapi; import org.jclouds.openstack.swift.v1.domain.swiftobject; import org.jclouds.openstack.swift.v1.features.objectapi; objectapi api this.container.getobjectapi ; swiftobject obj api.get this.file ; inputstream file obj.getpayload.openstream ; bufferedreader reader new bufferedreader new inputstreamreader file ; stringbuilder sb new stringbuilder initial_read_size ; for int reader.read ; ; reader.read sb.append char c ; return sb.length optional.of sb optional.empty ;"
    },
    {
        "url": "https://stackoverflow.com/questions/41839789",
        "text": "openstack.block_store.v2.volume.volumedetail source_volid=none, os volume replication:driver_data=none, rel : self , href : rel : bookmark , href : os vol mig status attr:name_id=none, os vol host attr:host=xxxxxxxxxxxxx@lvm#lvm, availability_zone=nova, volume_type=none, os vol mig status attr:migstat=none, snapshot_id=none, readonly : false , attached_mode : rw , use, os vol tenant attr:tenant_id=f13fa6a3bbc442f385f023134efc67fa, os volume replication:extended_status=none, attachment_id : , host_name : none, volume_id : , server_id : , device : dev vdb , id : , replication_status=disabled, created_at=t, consistencygroup_id=none,"
    },
    {
        "url": "https://stackoverflow.com/questions/42111879",
        "text": "os.compute .servers .action instanceid, action.stop ;"
    },
    {
        "url": "https://stackoverflow.com/questions/42111879",
        "text": "modelentity token null; if apiversion.equals openstackcloudcredential.api_version.v2 token osclient.osclientv2 os .getaccess ; else if apiversion.equals openstackcloudcredential.api_version.v3 token osclient.osclientv3 os .gettoken ; return token;"
    },
    {
        "url": "https://stackoverflow.com/questions/42111879",
        "text": "osclient os null; if apiversion.equals openstackcloudcredential.api_version.v2 os osfactory.clientfromaccess access token ; else if apiversion.equals openstackcloudcredential.api_version.v3 os osfactory.clientfromtoken token token ; _logger.info rishi token token.hashcode ; return os;"
    },
    {
        "url": "https://stackoverflow.com/questions/42283693",
        "text": "from shade import simple_logging debug=true conn openstack_cloud cloud= images conn.list_images for image in images: print image"
    },
    {
        "url": "https://stackoverflow.com/questions/42283693",
        "text": "conn openstack_cloud cloud= , false"
    },
    {
        "url": "https://stackoverflow.com/questions/43121545",
        "text": "swift_client aws::s3::resource.new endpoint: bucket: bucket , credentials: aws::credentials.new access_key_id, secret_access_key swift_bucket swift_client.bucket bucket aws::s3::resource.new region: us east , bucket: bucket , credentials: aws::credentials.new access_key_id, secret_access_key s3 bucket this object exists, true someuid swift_object swift_bucket.object someuid uid is the same as in want to copy object to swift, so do: swift_object.copy_from copy_source: # s3_object.key"
    },
    {
        "url": "https://stackoverflow.com/questions/43261774",
        "text": "private_port_1: type: os::neutron::port properties: network: get_param: private_net fixed_ips: subnet : get_param: private_subnet , ip_address : get_param: private_ip_1 my_vm_123: type: os::nova::server properties: image: get_param: image_name flavor: get_param: flavor_name name: get_param: vm_name networks: network: get_param: public_net port: get_resource: private_port_1"
    },
    {
        "url": "https://stackoverflow.com/questions/43584375",
        "text": "myinstance shade.openstack_cloud cloud= mycloud"
    },
    {
        "url": "https://stackoverflow.com/questions/43645926",
        "text": "var pkgcloud require pkgcloud ; var require q ; router.get , function req, res, next var conn pkgcloud.compute.createclient provider: openstack , required username: demo , required password: azerty , required authurl: region_name : regionone required ; console.log conn ;"
    },
    {
        "url": "https://stackoverflow.com/questions/43645926",
        "text": "var q.defer ; conn.getimages function err, images for var images.length; console.log id: images i .id ; console.log name: images i .name ; console.log created: images i .created ; console.log updated: images i .updated ; console.log status: images i .status ; if err console.log erreur ; d.reject err ; else console.log juste ; d.resolve ; ; res.render index , title: express ; ;"
    },
    {
        "url": "https://stackoverflow.com/questions/43745882",
        "text": "access_key tester host_base host_bucket secret_key testing signature_v2 true"
    },
    {
        "url": "https://stackoverflow.com/questions/43846094",
        "text": "alarm os .telemetry .alarms .create alarm ; system.out.println alarm details: ; system.out.println alarms: +os.telemetry .alarms ;"
    },
    {
        "url": "https://stackoverflow.com/questions/43862938",
        "text": "ceilometerthresholdrule ceilometerthresholdrule new ceilometerthresholdrule ; alarm alarm builders.alarm .name high_cpu1 .description high .type alarm.type.threshold .thresholerule ceilometerthresholdrule .alarmactions alarmactions .okactions okactions .isenabled true .build ; alarm os .telemetry .alarms .create alarm ;"
    },
    {
        "url": "https://stackoverflow.com/questions/43915002",
        "text": "var require underscore , keystone require keystone , middleware require . middleware , restful require restful keystone onode keystone , importroutes keystone.importer __dirname ; common middleware keystone.pre routes , middleware.initlocals ; keystone.pre render , middleware.flashmessages ; import route controllers var routes views: importroutes . views , api: importroutes . api , ; create route that handles signin function signin req, res if !req.body.username !req.body.password return res.json success: false ; keystone.list user .model.findone email: req.body.username .exec function err, user if err !user return res.json success: false, session: false, message: err err.message err.message false sorry, there was an issue signing you in, please try again. , ; keystone.session.signin email: user.email, password: req.body.password , req, res, function user return res.json success: true, session: true, date: new date .gettime , userid: user.id, ; , function err return res.json success: true, session: false, message: err err.message err.message false sorry, there was an issue signing you in, please try again. , ; ; ; you ll want one for signout too function signout req, res keystone.session.signout req, res, function res.json signedout: true ; ;"
    },
    {
        "url": "https://stackoverflow.com/questions/43915002",
        "text": "var post keystone.list post ; list posts exports.list function req, res post.modal.find function err, items if err return res.apierror database , err ; res.apiresponse posts: items ; res.json items ; ; get post by id exports.get function req, res post.model.findbyid req.params.id .exec function err, item if err return res.apierror database , err ; if !item return res.apierror not found ; res.apiresponse post: item ; res.json item ; ;"
    },
    {
        "url": "https://stackoverflow.com/questions/43992982",
        "text": "import luigi import os_client_config import glanceclient.v2.client as glclient from luigi.mock import mockfile import sys import os def get_credentials : d username x d password x d auth_url x d tenant_name x d endpoint x return class lookupopenstack luigi.task : def requires self : pass def output self : gc glclient.client **get_credentials images gc.images.list print images , images for in images: print i return mockfile images , mirror_on_stderr=true def run self : pass if __name__ __main__ : luigi.run local scheduler , lookupopenstack"
    },
    {
        "url": "https://stackoverflow.com/questions/44222378",
        "text": "net mininet autostaticarp ; net.addcontroller c3"
    },
    {
        "url": "https://stackoverflow.com/questions/44307815",
        "text": "ldap_url_parse_ext ldap: localhost ldap_init: trying ldap_init: using ldap_init: home env is ldap_init: trying ldap_init: trying ldap_init: trying ldaprc ldap_init: ldapconf env is null ldap_create ldap_url_parse_ext ldap: 10.0.0.23 ldap_sasl_bind ldap_send_initial_request ldap_new_connection ldap_int_open_connection ldap_connect_to_host: tcp ldap_new_socket: ldap_prepare_socket: ldap_connect_to_host: trying ldap_pvt_connect: fd: tm: async: attempting to connect: connect success ldap_open_defconn: successful ldap_send_server_request ldap_result ld msgid ld msgid infinite timeout continue ld msgid all ld connections: host: port: refcnt: status: connected last used: thu jun ld outstanding requests: msgid origid status inprogress outstanding referrals parent count ld request count abandoned ld response queue: empty ld response count ldap_chkresponselist ld msgid all ldap_chkresponselist returns ld null ldap_int_select ld msgid all ld msgid message type bind ld new referrals mark request completed, ld msgid request done: ld msgid res_errno: res_error: res_matched: ldap_free_request origid msgid ldap_parse_result ldap_msgfree ldap_search_ext put_filter: put_filter: and put_filter_list put_filter: put_filter: simple put_simple_filter: put_filter: put_filter: simple put_simple_filter: put_filter: put_filter: simple put_simple_filter: ldap_build_search_req attrs: cn userpassword enabled sn mail description ldap_send_initial_request ldap_send_server_request ldap_result ld msgid ld msgid infinite timeout continue ld msgid all ld connections: host: port: refcnt: status: connected last used: thu jun ld outstanding requests: msgid origid status inprogress outstanding referrals parent count ld request count abandoned ld response queue: empty ld response count ldap_chkresponselist ld msgid all ldap_chkresponselist returns ld null ldap_int_select ld msgid all ld msgid message type search result ld new referrals mark request completed, ld msgid request done: ld msgid res_errno: res_error: res_matched: ldap_free_request origid msgid ldap_parse_result ldap_msgfree keystone.auth.plugins.core could not find user: admin keystone.common.wsgi authorization failed. could not find user: admin disable insecure_debug mode to suppress these"
    },
    {
        "url": "https://stackoverflow.com/questions/44540948",
        "text": "swift_client swiftclient.connection preauthurl=swift_public_auth_url,preauthtoken=swift_access_token,auth_version= ,insecure=true,tenant_name= admin with open path to file file.ckpt , r as read_file: swift_client.put_object swift_container_name, file.ckpt , read_file.read ,content_type= text plain print done"
    },
    {
        "url": "https://stackoverflow.com/questions/44884549",
        "text": "if resp.error toastr.error authentication failure. please contact the system administrator. ;"
    },
    {
        "url": "https://stackoverflow.com/questions/44986818",
        "text": "stack_id str hc.stacks.get stack_name .id hc.stacks.delete stack_id=stack_id try: evntsdata hc.events.list stack_name 0 .to_dict event_handle evntsdata resource_status if event_handle delete_in_progress : loopcontinue true while loopcontinue: evntsdata hc.events.list stack_name 0 .to_dict event_handle evntsdata resource_status if event_handle delete_complete : loopcontinue false print str timestamp delete is completed! elif event_handle delete_failed : print failed this needs proper msg sys.exit 0 else: print str timestamp delete in progress! time.sleep 5 elif event_handle delete_complete : print str timestamp delete is completed! sys.exit 0 elif event_handle delete_failed : print failed sys.exit 0 except attributeerror as e: print str timestamp error: stack delete failure raise except runtimeerror, heatclient.exc.notfound : print stack doesnt exist: , stack_name"
    },
    {
        "url": "https://stackoverflow.com/questions/45013893",
        "text": "public void createinstance string instancename for string region regions serverapi serverapi novaapi.getserverapi region ; system.out.println server api serverapi.tostring ; string imageid ; string flavorid ; an servercreated ser serverapi.create instancename, imageid, flavorid ; server server serverapi.get ser.getid ; while server.getstatus .value .equals active false try thread.sleep 1000 catch interruptedexception ex server serverapi.get ser.getid ; system.out.println ser.getid ;"
    },
    {
        "url": "https://stackoverflow.com/questions/45084991",
        "text": "def download_file file_name, url : urllib.urlretrieve url, file_name def upload_file file_name : with open file_name, r as myfile: conn.put_object container, file_name,"
    },
    {
        "url": "https://stackoverflow.com/questions/45287354",
        "text": "swiftclient.client.connection user=sl_user,key=user_key,authurl=endpoint_url"
    },
    {
        "url": "https://stackoverflow.com/questions/45287354",
        "text": "file_size os.path.getsize object_path block_size chunk_size block_size chunks math.ceil file_size float chunk_size chunks int chunks print reading in file file open object_path, rb for in range chunks : data file.read chunk_size print uploading part of .format i chunks chunk_name chunk .format i container_name, object_name+ data, content_type=content_type headers x object manifest : container_name+ container_name,object_name,headers=headers"
    },
    {
        "url": "https://stackoverflow.com/questions/45685639",
        "text": "def listbuckets config: config, bucketname: string : unit val accesskey val secretkey xxxxxxxxxxxx val endpoint val credentials new basicawscredentials accesskey, secretkey ; val clientconfig new clientconfiguration ; clientconfig.setprotocol protocol.https ; val client .withcredentials newawsstaticcredentialsprovider credentials .withclientconfiguration clientconfig .withpathstyleaccessenabled true .withendpointconfiguration new endpointconfiguration endpoint, us east .build ; system.out.println client.listbuckets"
    },
    {
        "url": "https://stackoverflow.com/questions/45709555",
        "text": "interceptdownload http, image, versionname var options container: openstack , remote: logo.png ; var stream client.download options, function err, res if err console.log err ; else console.log res ; .pipe fs.createwritestream file.txt ; ,"
    },
    {
        "url": "https://stackoverflow.com/questions/45745024",
        "text": "formdata"
    },
    {
        "url": "https://stackoverflow.com/questions/46002519",
        "text": "from libcloud.compute.types import provider from libcloud.compute.providers import get_driver auth_username demo auth_password password auth_url project_name demo region_name regionone provider get_driver provider.openstack conn provider auth_username, auth_password, ex_force_auth_url=auth_url, ex_force_auth_version= 2.0_password , ex_tenant_name=project_name, ex_force_service_region=region_name hello images conn.list_images for image in images: print image"
    },
    {
        "url": "https://stackoverflow.com/questions/46013103",
        "text": "swiftuploadobject container source_file.txt , object_name= , header : x copy from: container source_file.txt , x copy from account:auth_source"
    },
    {
        "url": "https://stackoverflow.com/questions/46068395",
        "text": "from openstack import connection import openstack conn project_name= , admin , test , conn.identity.v2._proxy.create_role"
    },
    {
        "url": "https://stackoverflow.com/questions/46400286",
        "text": "conn.network.find_port"
    },
    {
        "url": "https://stackoverflow.com/questions/46400286",
        "text": "conn.network.find_port"
    },
    {
        "url": "https://stackoverflow.com/questions/46420320",
        "text": "type nova.availability_zones.list class novaclient.base.listwithmeta nova.availability_zones.list availabilityzone: internal availabilityzone: nova"
    },
    {
        "url": "https://stackoverflow.com/questions/46470428",
        "text": "get_version_v3 got an unexpected keyword argument"
    },
    {
        "url": "https://stackoverflow.com/questions/46515412",
        "text": "expected actual unauthorized excon.error.response :body : : the request you have made requires authentication.\\ : : :cookies :headers cache control no cache, no store, must revalidate content length content security policy src self content type application json date sun, oct gmt expires pragma no cache server apache centos openssl mod_wsgi 3.4 python strict transport security max vary x auth token www authenticate keystone x content type options nosniff x xss protection x openstack request id :host identity.open.softlayer.com :local_address :local_port :path auth tokens :port :reason_phrase unauthorized :remote_ip :status :status_line http"
    },
    {
        "url": "https://stackoverflow.com/questions/46681591",
        "text": "conn.identity.update_user user_id, after this step, the project and admin resources can not be retrieved."
    },
    {
        "url": "https://stackoverflow.com/questions/46721423",
        "text": "url ldap: localhost user password password suffix"
    },
    {
        "url": "https://stackoverflow.com/questions/46793516",
        "text": "import cherrypy import xmlrpclib import xml.etree.elementtree as et from import loading from import session import novaclient.client as client from socket import gethostbyaddr nova client.client 2.1 sesscookie .value serverlist nova.servers.list print serverlist"
    },
    {
        "url": "https://stackoverflow.com/questions/46849667",
        "text": "import cherrypy from import session as session from keystoneclient.v3 import client as client from import auth auth_url keystone_url, username cherrypy.session username , password cherrypy.session password , user_domain_name=openstack_default_domain, project_name admin , project_id , project_domain_name sess session.session auth=auth keystoneclient client.client session=sess"
    },
    {
        "url": "https://stackoverflow.com/questions/46849667",
        "text": "projectlist keystoneclient.projects.list print projectlist"
    },
    {
        "url": "https://stackoverflow.com/questions/46907661",
        "text": "import cherrypy import ldap from import loading from import session as session from keystoneclient.v3 import client as client from import import json storing username and password in cherrypy session cherrypy.session username data.get username cherrypy.session password data.get password .replace %20 setting up keystone client auth auth_url keystone_url, username cherrypy.session username , password cherrypy.session password , user_domain_name= domain_name sess session.session auth=auth, etc ssl certs ca bundle.crt keystoneclient client.client session=sess getting list of projects print keystoneclient.projects.list"
    },
    {
        "url": "https://stackoverflow.com/questions/46969598",
        "text": "def register request : if request.method get : return render request, frontend register.html elif request.method post : username request.post.get username password request.post.get password phone request.post.get phone email request.post.get email usertype app_user_params username :username, password :hashlib.sha1 .hexdigest , phone :phone, email :email, usertype :usertype user_form usermf app_user_params if user_form.is_valid : obj_user models.user.objects.filter username=username obj_phone models.user.objects.filter phone=phone obj_email models.user.objects.filter email=email from openstack import connection connection connection.connection **settings.admin_openrc admin_conn openstackconn.openstackadminconn admin_conn.admin_conn connection project_params description s project , is_domain :false, enable :false, set true still has this issue. name :username, try: new_project admin_conn.admin_conn.identity.create_project **project_params create_project print new_project, new_project.id, new project created except exception as e: print e.message return httpresponse json.dumps status_code :0, utf 8 openstack_cloud user user_params default_project_id :new_project.id, email :email, enabled :false, name :username, password :password try: new_user admin_conn.admin_conn.identity.create_user **user_params print new_user, new_user.id, new user created except exception as e: admin_conn.admin_conn.identity.delete_project new_project print e.message return httpresponse json.dumps status_code : : e.message.encode utf 8"
    },
    {
        "url": "https://stackoverflow.com/questions/46972890",
        "text": "novaclient.client version, user, password, project_id, auth_url, regionname"
    },
    {
        "url": "https://stackoverflow.com/questions/46972890",
        "text": "novaclient.client version, user, password, project_id, auth_url"
    },
    {
        "url": "https://stackoverflow.com/questions/46997051",
        "text": "def ip_definer start, end, cidr, ip_buffer : start_ip ipaddress.ip_address start allocation pool start ip end_ip ipaddress.ip_address end allocation pool end ip net_cidr ipaddress.ipv4network cidr used_ports free_ip lap for ip_pool in net_cidr: if ip_pool start_ip and ip_pool end_ip : sure that we iterate withing the dhcp allocation pool start and end ip range scale_ip port_crawler ip_pool, ip_buffer, used_ports, free_ip, lap, end def port_crawler ip_pool, ip_buffer, used_ports, free_ip, lap, end : if str ip_pool in used_ports: looking for free ip, wher used_ports is list of occupied ips. print ip is used .format ip_pool else: len free_ip if free_ip.append ip_pool first free ip in the subnet if end str ip_pool : if we hit the last ip of subnet. lap.append free_ip 1 store last ip of the last free ip found in previous iteration. if n and n ip_buffer : checking for ip buffer addition consecutive free ips index if ip_pool free_ip index free_ip.append ip_pool else: del free_ip 0:len if len free_ip ip_buffer : if length of ip buffer is equal to length to lenght of free_ips, return first free ip scale_ip str free_ip 0 return scale_ip"
    },
    {
        "url": "https://stackoverflow.com/questions/47226713",
        "text": "compute_limits novaclient.limits.get .absolute for in compute_limits: print s.name str s.value"
    },
    {
        "url": "https://stackoverflow.com/questions/47226713",
        "text": "limits.get"
    },
    {
        "url": "https://stackoverflow.com/questions/47257193",
        "text": "class image metadata.metadatamixin : resource_key image resources_key images base_path images service compute_service.computeservice capabilities allow_get true allow_delete true allow_list true"
    },
    {
        "url": "https://stackoverflow.com/questions/47299440",
        "text": "from libcloud.compute.types import provider from libcloud.compute.providers import get_driver authentication information so you can authenticate to dreamcompute copy the details from the openstack rc file auth_username admin auth_password tenant_name admin project_name admin auth_url region_name regionone provider get_driver provider.openstack conn provider auth_username, auth_password, ex_force_auth_url=auth_url, ex_force_auth_version= 2.0_password , ex_tenant_name=project_name, ex_force_service_type= compute , ex_force_service_name= compute , get the image that we want to use by its id note: the image_id may change. see the documentation to find all the images available to your user image_id image conn.get_image image_id get the flavor that we want to use by its id flavor_id flavor conn.ex_get_size flavor_id create the node with the name and the size and image we chose above instance conn.create_node name= practiceinstance"
    },
    {
        "url": "https://stackoverflow.com/questions/47303681",
        "text": "from libcloud.compute.types import provider from libcloud.compute.providers import get_driver authentication information so you can authenticate to dreamcompute copy the details from the openstack rc file auth_username admin auth_password tenant_name admin project_name admin auth_url region_name regionone openstack get_driver provider.openstack driver openstack auth_username , auth_password , ex_force_auth_url=auth_url, ex_force_auth_version= 2.0_password , ex_tenant_name= admin ex_force_service_name= nova , ex_force_service_region=region_name print dir driver.list_nodes print driver.api_name print driver.volume_state_map driver.connection.auth_user_info images driver.name print driver.list_volumes for image in images: print image"
    },
    {
        "url": "https://stackoverflow.com/questions/47375858",
        "text": "default_store file"
    },
    {
        "url": "https://stackoverflow.com/questions/47462117",
        "text": "identifier domainidentifier identifier.byname domain ; identifier identifier.byname project ; osclient.osclientv3 os osfactory.builderv3 .credentials user , pass .scopetoproject projectidentifier, domainidentifier .authenticate ;"
    },
    {
        "url": "https://stackoverflow.com/questions/47547662",
        "text": "user_conn useropenstackconn openstack_servers_gen user_conn.conn.compute.servers"
    },
    {
        "url": "https://stackoverflow.com/questions/47549386",
        "text": "for sd in server_generator: print sd.addresses"
    },
    {
        "url": "https://stackoverflow.com/questions/47612228",
        "text": "zabbix server ip address"
    },
    {
        "url": "https://stackoverflow.com/questions/47632015",
        "text": "loader loading.get_plugin_loader password auth loader.load_from_options auth_url=auth_url, project_name=tenant_name sess session.session auth=auth nova client.client 2 version and session"
    },
    {
        "url": "https://stackoverflow.com/questions/47693548",
        "text": "nova.keypairs.create"
    },
    {
        "url": "https://stackoverflow.com/questions/47693548",
        "text": "try: nova.keypairs.create name=keyname, public_key=key except badrequest: raise cherrypy.httperror 400, invalid public key"
    },
    {
        "url": "https://stackoverflow.com/questions/47901422",
        "text": "public void add string objectname, inputstream imagestream osfactory.clientfromtoken swiftos.gettoken ; map string, string metadata new hashmap ; metadata.put x delete after , ; objectputoptions objectputoptions objectputoptions.create ; objectputoptions.metadata metadata ; .objects .put container, objectname, payloads.create imagestream , objectputoptions ;"
    },
    {
        "url": "https://stackoverflow.com/questions/48465113",
        "text": "projects keystone.projects.list for in projects: print p project domain_id=default, is_domain=false, self : parent_id=default project domain_id=default, is_domain=false, self : parent_id=default project domain_id=default, is_domain=false, self : parent_id=default, project domain_id=default, is_domain=false, self : parent_id=default project domain_id=efc1097d56b047099645cbdb53a89c13, is_domain=false, self : parent_id=efc1097d56b047099645cbdb53a89c13 project project for initializing the cloud., domain_id=default, is_domain=false, self : parent_id=default project domain_id=default, is_domain=false, self : parent_id=default project domain_id=default, is_domain=false, self : parent_id=default project domain_id=default, is_domain=false, self : parent_id=default"
    },
    {
        "url": "https://stackoverflow.com/questions/48465113",
        "text": "for in projects: print p.id"
    },
    {
        "url": "https://stackoverflow.com/questions/48465113",
        "text": "for in projects: print p.createddate"
    },
    {
        "url": "https://stackoverflow.com/questions/48483831",
        "text": "def clean_projectname self : submitted_data self.cleaned_data projectname newproj proj foo submitted_data.upper keystone osauth.connect try: project keystone.projects.find name=newproj raise forms.validationerror the project name is already taken except notfound: return submitted_data"
    },
    {
        "url": "https://stackoverflow.com/questions/48692372",
        "text": "from novaclient import client as novaclient class floatingipprovisioner : def __init__ self, os_session : self.nova novaclient.client version= def addfloatingiptoinstance self, instance : self.nova.floating_ip_pools floating_ip self.nova.floating_ips.create instance self.nova.servers.find name= test instance.add_floating_ip floating_ip return floating_ip instance novaclient.client version= .servers.find name= floatingip floatingipprovisioner session .addfloatingiptoinstance instance"
    },
    {
        "url": "https://stackoverflow.com/questions/49278377",
        "text": "def sync_resources : logger.info executing sync_resources sync_tenants tenants tenant.objects.all managers manager.objects.filter is_active=true for manager in managers: services manager.services.all regions manager.region_set.all for region in regions: ceilometer_driver ceilometerdriver region_name=region.name, if ceilometer_driver.is_authenticated: for tenant in tenants: queries ceilometer_driver.make_query project_id , ceilometer_driver.equal, tenant.tenant_id resource_list ceilometer_driver.get_resource_list query=queries"
    },
    {
        "url": "https://stackoverflow.com/questions/49319900",
        "text": "def sync_resources : logger.info executing sync_resources sync_tenants tenants tenant.objects.all managers manager.objects.filter is_active=true for manager in managers: services manager.services.all regions manager.region_set.all for region in regions: ceilometer_driver ceilometerdriver region_name=region.name, if ceilometer_driver.is_authenticated: for tenant in tenants: queries ceilometer_driver.make_query project_id , ceilometer_driver.equal, tenant.tenant_id resource_list ceilometer_driver.get_event_list query=queries"
    },
    {
        "url": "https://stackoverflow.com/questions/49495057",
        "text": "try bytearrayinputstream inputstream new bytearrayinputstream bytes here is inputstream not bytesource payload payload payloads.newinputstreampayload inputstream ; blob blob blobstore.blobbuilder path .payload payload .build ; the request blobstore.putblob containername, blob, multipart ; system.out.println string.format end upload all parts, parts part , strpartscount, strpartsize ;"
    },
    {
        "url": "https://stackoverflow.com/questions/49533936",
        "text": "objectstorageservice objectstorageservice objectstorage.authenticateandgetobjectstorageservice ; string container malware_files ; string filename ; swiftobject fileobj objectstorageservice.objects .get container,filename ; system.out.println got file! fileobj.getname at size fileobj.getsizeinbytes ; actionresponse response objectstorageservice.objects .delete container, fileobj.getname ; system.out.println response: response ; swiftobject fileobjagain objectstorageservice.objects .get container,filename ; system.out.println got file! fileobjagain.getname at size fileobjagain.getsizeinbytes ;"
    },
    {
        "url": "https://stackoverflow.com/questions/49586902",
        "text": "getcontentmetadata"
    },
    {
        "url": "https://stackoverflow.com/questions/49586902",
        "text": "try putoptions putoptions putoptions.builder.metadata immutablemap.of test , string.valueof strvalue ; bytesource filebytes files.asbytesource file ; payload payload payloads.newbytesourcepayload filebytes ; the header for the request payload.getcontentmetadata .setcontentlength file.length ; payload.getcontentmetadata .setcontenttype contenttype ; payload.setcontentmetadata mutablecontentmetadata putoptions ; blob blob blobstore.blobbuilder file.getname .payload payload .build ; the request blobstore.putblob testcontainer , blob, multipart ; return contentlength;"
    },
    {
        "url": "https://stackoverflow.com/questions/49586902",
        "text": "payload.setcontentmetadata mutablecontentmetadata putoptions ;"
    },
    {
        "url": "https://stackoverflow.com/questions/49633288",
        "text": "try bytesource filebytes files.asbytesource file ; file file new file filepath ; string name test file.getname ; blob blob blobstore.blobbuilder name .usermetadata immutablemap.of contenttype , contenttype, test , string.valueof test .payload filebytes .contentlength file.length .contenttype contenttype .build ; the request blobstore.putblob containername, blob, multipart ; return contentlength;"
    },
    {
        "url": "https://stackoverflow.com/questions/49719188",
        "text": "marconiapi marconiapi contextbuilder.newbuilder openstack marconi .endpoint auth_url .credentials tenantname : username, apikey .buildapi marconiapi.class ; string region marconiapi.getconfiguredregions .iterator .next ; queueapi queueapi marconiapi.getqueueapi region, publisher_id ; queueapi.create test ;"
    },
    {
        "url": "https://stackoverflow.com/questions/49729676",
        "text": "var openstack_client_compute null; openstack_client_compute pkgcloud.compute.createclient provider: provider, required username: username, required password: password, required region: region, authurl: auth_url required ; options name: , required server: befd required ; openstack_client_compute.createimage options, function err, image if err console.log err ; console.log image ; ;"
    },
    {
        "url": "https://stackoverflow.com/questions/49799498",
        "text": "string region novaapi.getconfiguredregions .iterator .next ; serverapi serverapi novaapi.getserverapi region ; server novainstance serverapi.get temp_servername ; tags novainstance.getmetadata ;"
    },
    {
        "url": "https://stackoverflow.com/questions/49924325",
        "text": "novaapi novaapi computeservicecontext.unwrapapi novaapi.class ; string region novaapi.getconfiguredregions .iterator .next ; serverapi serverapi novaapi.getserverapi region ; server instance serverapi.get temp_servername ;"
    },
    {
        "url": "https://stackoverflow.com/questions/50046237",
        "text": "blobcontext contextbuilder.newbuilder provider .credentials username, apikey .endpoint endpoint .overrides multipartproperties .buildview regionscopedblobstorecontext.class ; string blobregion blobcontext.getconfiguredregions .iterator .next ;"
    },
    {
        "url": "https://stackoverflow.com/questions/50046237",
        "text": "string blobregion blobcontext.getconfiguredregions .iterator .next ;"
    },
    {
        "url": "https://stackoverflow.com/questions/50275187",
        "text": "container container account.getcontainer my new container ;"
    },
    {
        "url": "https://stackoverflow.com/questions/50275187",
        "text": "log n"
    },
    {
        "url": "https://stackoverflow.com/questions/50476187",
        "text": "bin bash while do echo test sleep done"
    },
    {
        "url": "https://stackoverflow.com/questions/50642922",
        "text": "def get_objects item : if item stacks : if item volumes : if item snapshots : return items def dep_graph volumes,snapshots,snapshot_id=none : vol_list= for volume in volumes: if volume.snapshot_id snapshot_id: id :volume.id, snapshot_id :volume.snapshot_id, snapshots : , vol_list.append for snapshot in snapshots: for volume in vol_list: snap_list= if snapshot.volume_id volume id : id :snapshot.id, volumes : volumes .extend dep_graph volumes,snapshots,snapshot.id volume snapshots .append return vol_list if __name__ __main__ : volumes get_objects volumes snapshots get_objects snapshots output dep_graph volumes, snapshots print output"
    },
    {
        "url": "https://stackoverflow.com/questions/50931708",
        "text": "public class storedobjectlistelement public string subdir; public string name; public string hash; public long bytes; content_type public string contenttype; last_modified public string lastmodified;"
    },
    {
        "url": "https://stackoverflow.com/questions/51073548",
        "text": "import openstack.config self.cloud_region openstack.config.openstackconfig .get_one adminproject self.session self.cloud_region.get_session_client compute"
    },
    {
        "url": "https://stackoverflow.com/questions/51073548",
        "text": "response self.session.get url"
    },
    {
        "url": "https://stackoverflow.com/questions/51073548",
        "text": "reponse self.session.post url,"
    },
    {
        "url": "https://stackoverflow.com/questions/51076444",
        "text": "from openstack import connection conn"
    },
    {
        "url": "https://stackoverflow.com/questions/51153144",
        "text": "def get_token : data auth identity methods password , password : user name os_username, domain : name : , password : os_password requests.post os_auth_url+ auth , headers headers, json data, verify false print r.content json.loads r.content return j token user id"
    },
    {
        "url": "https://stackoverflow.com/questions/51153144",
        "text": "def get_tenantid : requests.get os_auth_url+ auth , headers headers, verify false return get_token headers x auth project id admin headers x auth token get_tenantid"
    },
    {
        "url": "https://stackoverflow.com/questions/51207611",
        "text": "import requests import subprocess import json import os os.system curl h private token: censored json of the project pipelines and covert it to text res data response.json res.text login and actions if: element status active print element status we will put the runner checking actions list flavor list else: print element status"
    },
    {
        "url": "https://stackoverflow.com/questions/51417144",
        "text": "def walk f : as if type object then reduce keys as ; : walk f elif type array then map walk f else end; .modules? ?|select openstack_compute_floatingip_v2 , .type openstack_compute_instance_v2 | if type object and .attributes.address then .attributes.instance_id referred value here else end"
    },
    {
        "url": "https://stackoverflow.com/questions/51838788",
        "text": "var pkgcloud require pkgcloud ,"
    },
    {
        "url": "https://stackoverflow.com/questions/51838788",
        "text": "var client pkgcloud.compute.createclient provider: openstack , username: your user name , password: your password , region: regionone , for devstack, might be different on other openstack distributions authurl:"
    },
    {
        "url": "https://stackoverflow.com/questions/51838788",
        "text": "client.getflavors function err, flavors if err console.dir err ; return;"
    },
    {
        "url": "https://stackoverflow.com/questions/51898289",
        "text": "_oapi.swift.getobject containername, filename, outputstream ;"
    },
    {
        "url": "https://stackoverflow.com/questions/52108065",
        "text": "def serialize_entity self, context, entity : if isinstance entity, tuple, list, set, dict : entity self._process_iterable context, self.serialize_entity, entity elif hasattr entity, obj_to_primitive and callable entity.obj_to_primitive : entity entity.obj_to_primitive return entity"
    },
    {
        "url": "https://stackoverflow.com/questions/52108065",
        "text": "hasattr entity, obj_to_primitive"
    },
    {
        "url": "https://stackoverflow.com/questions/52108065",
        "text": "entity.obj_to_primitive"
    },
    {
        "url": "https://stackoverflow.com/questions/52846781",
        "text": "service_plugins router,lbaasv2"
    },
    {
        "url": "https://stackoverflow.com/questions/53141473",
        "text": "import openstack conn openstack.connect cloud= conn.list_flavors"
    },
    {
        "url": "https://stackoverflow.com/questions/53443903",
        "text": "def createserver conn, : print create server: server_name testpython image_name cirros flavor_name basic network_name private image conn.compute.find_image image_name flavor conn.compute.find_flavor flavor_name network conn.network.find_network network_name volume conn.get_volume volume keypair find_keypair conn server conn.compute.create_server name server_name, image.id, flavor_id flavor.id, key_name keypair.name, networks uuid : network.id , boot_volume volume.id volume , true, serv conn.compute.wait_for_server server return serv"
    },
    {
        "url": "https://stackoverflow.com/questions/53472463",
        "text": "from keystoneclient.auth.identity import from keystoneclient import session from keystoneclient.v3 import client auth_url username dev user_domain_name project_name dev project_domain_name password auth auth_url=auth_url, project_id= user_domain_name=user_domain_name sess session.session auth=auth keystone client.client session=sess from novaclient import client nova client.client 2, nova.flavors.list"
    },
    {
        "url": "https://stackoverflow.com/questions/53560980",
        "text": "issubclass arg must be class"
    },
    {
        "url": "https://stackoverflow.com/questions/53654545",
        "text": "auth keystoneclient.auth.identity.v3.token auth_url=auth_url, session keystoneclient.session.session auth=auth keystone_client keystoneclient.v3.client.client endpoint_manager keystoneclient.v3.endpoints.endpointmanager endpoint_list endpoint_manager.list"
    },
    {
        "url": "https://stackoverflow.com/questions/53814720",
        "text": "list_stacks"
    },
    {
        "url": "https://stackoverflow.com/questions/53814720",
        "text": "def __find_stack self, connection, stack_info : stacks connection.list_stacks for stack in stacks: if stack_info in stack.values : return stack return none"
    },
    {
        "url": "https://stackoverflow.com/questions/54394543",
        "text": ""
    },
    {
        "url": "https://stackoverflow.com/questions/54394543",
        "text": "hw_machine_type"
    },
    {
        "url": "https://stackoverflow.com/questions/54475423",
        "text": "import os from django.utils.translation import ugettext_lazy as from horizon.utils import secret_key from openstack_dashboard.settings import horizon_config debug true databases : engine : django.db.backends.postgresql_psycopg2 , name : horizon , user : packstack , password : , host : port : , compress_offline true session_timeout webroot dashboard login_url webroot auth login logout_url webroot auth logout login_redirect_url webroot allowed_hosts openstack_keystone_multidomain_support true local_path os.path.dirname os.path.abspath __file__ secret_key secret_key.generate_or_read_from_file os.path.join local_path, .secret_key_store session_engine django.contrib.sessions.backends.cache caches : backend : django.core.cache.backends.locmem.locmemcache , location : , email_backend django.core.mail.backends.console.emailbackend openstack_host openstack_keystone_url openstack_host openstack_keystone_default_role _member_ openstack_keystone_backend name : native , can_edit_user : true, can_edit_group : true, can_edit_project : true, can_edit_domain : true, can_edit_role : true, openstack_hypervisor_features can_set_mount_point : false, can_set_password : false, requires_keypair : false, enable_quotas : true openstack_cinder_features enable_backup : false, openstack_neutron_network enable_router : true, enable_quotas : true, enable_ipv6 true, enable_distributed_router : false, enable_ha_router : false, enable_fip_topology_check : true, supported_vnic_types : , physical_networks : , openstack_heat_stack enable_user_pass : true, image_custom_property_titles architecture : _ architecture , kernel_id : _ kernel id , ramdisk_id : _ ramdisk id , image_state : euca2ools state , project_id : _ project id , image_type : _ image type , image_reserved_custom_properties api_result_limit api_result_page_size swift_file_transfer_chunk_size instance_log_length dropdown_max_items time_zone utc logging version : disable_existing_loggers : false, formatters : console : format : levelname s name s message s , operation : format : message s , , handlers : null : level : debug , class : logging.nullhandler , , console : level : debug , class : logging.streamhandler , formatter : console , , operation : level : , class : logging.streamhandler , formatter : operation , , , loggers : horizon : handlers : console , level : debug , propagate : false, , horizon.operation_log : handlers : operation , level : , propagate : false, , openstack_dashboard : handlers : console , level : debug , propagate : false, , novaclient : handlers : console , level : debug , propagate : false, , cinderclient : handlers : console , level : debug , propagate : false, , keystoneauth : handlers : console , level : debug , propagate : false, , keystoneclient : handlers : console , level : debug , propagate : false, , glanceclient : handlers : console , level : debug , propagate : false, , neutronclient : handlers : console , level : debug , propagate : false, , swiftclient : handlers : console , level : debug , propagate : false, , oslo_policy : handlers : console , level : debug , propagate : false, , openstack_auth : handlers : console , level : debug , propagate : false, , django : handlers : console , level : debug , propagate : false, , django.db.backends : handlers : null , propagate : false, , requests : handlers : null , propagate : false, , : handlers : null , propagate : false, , chardet.charsetprober : handlers : null , propagate : false, , : handlers : null , propagate : false, , scss : handlers : null , propagate : false, , , security_group_rules all_tcp : name : _ all tcp , ip_protocol : tcp , from_port : , to_port : , , all_udp : name : _ all udp , ip_protocol : udp , from_port : , to_port : , , all_icmp : name : _ all icmp , ip_protocol : icmp , from_port : , to_port : , , ssh : name : ssh , ip_protocol : tcp , from_port : , to_port : , , smtp : name : smtp , ip_protocol : tcp , from_port : , to_port : , , dns : name : dns , ip_protocol : tcp , from_port : , to_port : , , http : name : http , ip_protocol : tcp , from_port : , to_port : , , : name : , ip_protocol : tcp , from_port : , to_port : , , imap : name : imap , ip_protocol : tcp , from_port : , to_port : , , ldap : name : ldap , ip_protocol : tcp , from_port : , to_port : , , https : name : https , ip_protocol : tcp , from_port : , to_port : , , smtps : name : smtps , ip_protocol : tcp , from_port : , to_port : , , imaps : name : imaps , ip_protocol : tcp , from_port : , to_port : , , : name : , ip_protocol : tcp , from_port : , to_port : , , ms_sql : name : ms sql , ip_protocol : tcp , from_port : , to_port : , , mysql : name : mysql , ip_protocol : tcp , from_port : , to_port : , , rdp : name : rdp , ip_protocol : tcp , from_port : , to_port : , , rest_api_required_settings openstack_hypervisor_features , launch_instance_defaults , openstack_image_formats , openstack_keystone_backend , openstack_keystone_default_domain , create_image_defaults , enforce_password_check allowed_private_subnet_cidr : , : login_redirect_url webroot media_url webroot media static_url webroot static"
    },
    {
        "url": "https://stackoverflow.com/questions/55031769",
        "text": "componentdidmount axios .then res this.setstate ; .catch err console.log err ;"
    },
    {
        "url": "https://stackoverflow.com/questions/55307956",
        "text": "subprocess.popen cmd, shell true, stdout subprocess.pipe, stderr subprocess.pipe, cwd scriptdir, env myenv"
    },
    {
        "url": "https://stackoverflow.com/questions/55307956",
        "text": "run_cmd cli, on , on"
    },
    {
        "url": "https://stackoverflow.com/questions/55392922",
        "text": "conn.connect_as_project proj.name server ......"
    },
    {
        "url": "https://stackoverflow.com/questions/55508682",
        "text": "update_router"
    },
    {
        "url": "https://stackoverflow.com/questions/55508682",
        "text": "update_router router.id,"
    },
    {
        "url": "https://stackoverflow.com/questions/55508682",
        "text": "update_router router.id,"
    },
    {
        "url": "https://stackoverflow.com/questions/55707964",
        "text": "module.runners.openstack_dns_recordset_v2.dns record.0: id description name runner zone.domain.net. records.# records.0 region regionone ttl type zone_id"
    },
    {
        "url": "https://stackoverflow.com/questions/55756904",
        "text": "os.compute .flavors .list"
    },
    {
        "url": "https://stackoverflow.com/questions/55756904",
        "text": "os.images .list"
    },
    {
        "url": "https://stackoverflow.com/questions/55756904",
        "text": "osclient.osclientv3 os osfactory.builderv3 .credentials admin , pass , domain .scopetoproject project .authenticate ; os.compute .flavors .list ; connection timed out code"
    },
    {
        "url": "https://stackoverflow.com/questions/55767604",
        "text": "os.compute .flavors .list"
    },
    {
        "url": "https://stackoverflow.com/questions/55767604",
        "text": "osclient.osclientv3 os osfactory.builderv3 .credentials admin , pass , domain .scopetoproject project .authenticate ; os.compute .flavors .list ;"
    },
    {
        "url": "https://stackoverflow.com/questions/55767604",
        "text": "osfactory.enablehttploggingfilter true ;"
    },
    {
        "url": "https://stackoverflow.com/questions/55813940",
        "text": "public void swift_test os osfactory.builderv3 .endpoint our_keystonev3_url .credentials our_keystone_username, password, domain_identifier .scopetoproject identifier.byname our_tenant , identifier.byname our_domain .authenticate ; swiftaccount account os.objectstorage.account .get ; map string, string md os.objectstorage.objects .getmetadata our_container , our_object ; system.out.println md.tostring ;"
    },
    {
        "url": "https://stackoverflow.com/questions/56181191",
        "text": "servers nova.aggregates.list print servers , servers servers , aggregate: aggregate: aggregate:"
    },
    {
        "url": "https://stackoverflow.com/questions/56430101",
        "text": "parsed urlparse.urlparse cloud_url conn boto.connect_s3 aws_access_key_id=cloud_user, aws_secret_access_key=cloud_password, is_secure=false, calling_format=boto.s3.connection.ordinarycallingformat buckets conn.get_all_buckets for key in buckets: this prints list of bucket names. print key"
    },
    {
        "url": "https://stackoverflow.com/questions/56430101",
        "text": "session session.resource service_name= s3 use_ssl=false, endpoint_url=cloud_url, aws_access_key_id=cloud_user, aws_secret_access_key=cloud_password print list"
    },
    {
        "url": "https://stackoverflow.com/questions/56773325",
        "text": "conn.create_stack name= test template_file= , environment_files="
    },
    {
        "url": "https://stackoverflow.com/questions/58394265",
        "text": "import swiftclient bmdatabase . logs test.db with open bmdatabase, r as bmdatabase_file: correctbmdatabasename bmdatabase.replace . logs , swift_conn.put_object container_name,correctbmdatabasename,"
    },
    {
        "url": "https://stackoverflow.com/questions/59086240",
        "text": "def login request, template_name=none, extra_context=none, : logs user in using the :class:`~openstack_auth.forms.login` form. if not request.is_ajax :. if request.user.is_authenticated and auth.redirect_field_name not in request.get and auth.redirect_field_name not in request.post : return shortcuts.redirect settings.login_redirect_url get our initial region for the form. initial current_region request.session.get region_endpoint , none requested_region request.get.get region , none regions dict getattr settings, available_regions , if requested_region in regions and requested_region current_region: initial.update region : requested_region if request.method post : if django.version : form functional.curry forms.login else: form functional.curry forms.login, request else: form functional.curry forms.login, if extra_context is none: extra_context redirect_field_name : auth.redirect_field_name if not template_name: if request.is_ajax : template_name auth _login.html extra_context hide true else: template_name auth login.html res django_auth_views.login request, template_name=template_name, authentication_form=form, extra_context=extra_context, save the region in the cookie, this is used as the selected region next time the login form loads. if request.method post : utils.set_response_cookie res, login_region , request.post.get region , prepare_django_request request auth init_saml_auth errors not_auth_warn false success_slo false attributes false paint_logout false if sso in get_data : return httpresponseredirect auth.login elif slo in get_data : name_id none session_index none if samlnameid in request.session: name_id request.session samlnameid if samlsessionindex in request.session: session_index request.session samlsessionindex slo_built_url auth.logout name_id=name_id, session_index=session_index request.session logoutrequestid auth.get_last_request_id print set logout id return httpresponseredirect slo_built_url if samluserdata in request.session: paint_logout true if len request.session samluserdata attributes request.session samluserdata .items return render request, auth login.html , errors : errors, not_auth_warn : not_auth_warn, success_slo : success_slo, paint_logout : paint_logout, sso : true"
    },
    {
        "url": "https://stackoverflow.com/questions/59618421",
        "text": "from import from import session as keystone_session from keystoneclient.v3 import client from keystoneclient import utils def connect : auth admin , secret , project_name= , user_domain_name= project_domain_name= session keystone_session.session auth=auth,verify=false keystone client.client session=session,interface= return keystone"
    },
    {
        "url": "https://stackoverflow.com/questions/59618421",
        "text": "keystone.projects.list"
    },
    {
        "url": "https://stackoverflow.com/questions/59832284",
        "text": ""
    },
    {
        "url": "https://stackoverflow.com/questions/59909633",
        "text": "var pkgcloud require pkgcloud ; var client pkgcloud.compute.createclient provider: openstack , username: username password: password authurl: ip port basepath: ; client.getflavors function err, flavors console.log , err console.log flavors , flavors client.getservers function err, servers console.log , err console.log servers , servers"
    },
    {
        "url": "https://stackoverflow.com/questions/59948716",
        "text": "var blockstorageclient pkgcloud.blockstorage.createclient config ; var volumeoptions name: volume node test , required description: a test for creating volume from node js , required size: blockstorageclient.createvolume volumeoptions, error, blockstorage if !error console.log blockstorage created else console.log creating blockstorage ,"
    },
    {
        "url": "https://stackoverflow.com/questions/60071736",
        "text": "def upload_image : imagefile cirros.qcow2 loader loading.get_plugin_loader password auth user_domain_name= ****** , , , project_domain_name= ****** project_name= sess session.session auth=auth glance client.client session=sess with open imagefile, rb : image glance.images.create name= my_image is_public= , disk_format= container_format= , cirros.qcow2 glance.images.upload image.id, image_data="
    },
    {
        "url": "https://stackoverflow.com/questions/60267406",
        "text": "var client require pkgcloud .storage.createclient provider: openstack , username: myusername, password: mypassword, region: gra , authurl: ; const fsreadstream fs.createreadstream path.resolve __dirname, filelocation let writestream client.upload container: myovhstoragecontainer, remote: filename.jpg , ; writestream.on , function err console.log err ; writestream.on success , async function file console.log file ; fsreadstream.on open , function console.log open!! fsreadstream.pipe writestream ; ;"
    },
    {
        "url": "https://stackoverflow.com/questions/60649507",
        "text": "from django.utils.translation import ugettext_lazy as import horizon from openstack_dashboard.dashboards.project import dashboard class testpanel horizon.panel : name _ testpanel slug mypanel.testpanel permissions openstack.project.compute , openstack.roles.admin policy_rules compute , context_is_admin , compute , compute:get_all , dashboard.project.register testpanel"
    },
    {
        "url": "https://stackoverflow.com/questions/60649507",
        "text": "from django.utils.translation import ugettext_lazy as import horizon from openstack_dashboard.dashboards.project import dashboard class testpanel horizon.panel : name _ testpanel slug mypanel.testpanel permissions openstack.project.compute , openstack.roles.admin policy_rules compute , context_is_admin , compute , compute:get_all , dashboard.project.register testpanel"
    },
    {
        "url": "https://stackoverflow.com/questions/60735396",
        "text": "from django.db import models class student models.model : lname models.charfield max_length=50 max_length=50 def __str__ self : return self.lname"
    },
    {
        "url": "https://stackoverflow.com/questions/60735396",
        "text": "from rest_framework import serializers from import models class studentserializer serializers.modelserializer : class meta: fields lname , fname , model models.student"
    },
    {
        "url": "https://stackoverflow.com/questions/60735396",
        "text": "from django_filters import rest_framework as filters from .models import student class studentfilter filterset : total filters.numberfilter name= class meta: model student fields lname , fname total , #other fields"
    },
    {
        "url": "https://stackoverflow.com/questions/60735396",
        "text": "from rest_framework import generics from django.db.models import count from .models import post,student,exam,sample from .serializers import postserializer,studentserializer,examserializer,sampleserializer from django_filters.rest_framework import djangofilterbackend django_filters.rest_framework from django.db import connection class studentlist generics.listapiview : serializer_class studentserializer def get_queryset self : return student.objects.all .values fname .annotate total=count fname total"
    },
    {
        "url": "https://stackoverflow.com/questions/60735396",
        "text": "from django.urls import path from import views urlpatterns path , views.postlist.as_view , path int:pk views.postdetail.as_view , path student ,views.studentlist.as_view , path exam ,views.examlist.as_view , path sam ,views.samplelist.as_view"
    },
    {
        "url": "https://stackoverflow.com/questions/60735396",
        "text": "from django.contrib import admin from django.urls import include, path urlpatterns path admin , admin.site.urls , path api , include posts.urls , got output in the shell but couldn t get the same value in the browser api"
    },
    {
        "url": "https://stackoverflow.com/questions/61084198",
        "text": "from django.conf.urls import url from django.views import generic from openstack_auth import utils from openstack_auth import views from import views from django.contrib.auth import views as auth_views urlpatterns url r , loginview.as_view , login , url r , logoutview.as_view , logout , url r ?p tenant_id , views.switch, switch_tenants , url r ?p region_name , views.switch_region, switch_services_region , url r ?p keystone_provider , views.switch_keystone_provider, switch_keystone_provider if utils.is_websso_enabled : urlpatterns url r , views.websso, websso , url r , generic.templateview.as_view template_name= 403.html"
    },
    {
        "url": "https://stackoverflow.com/questions/61245730",
        "text": "create_before_destroy true"
    },
    {
        "url": "https://stackoverflow.com/questions/61353097",
        "text": "import pyspark from pyspark.sql.session import sparksession spark sparksession.builder.appname test .getorcreate"
    },
    {
        "url": "https://stackoverflow.com/questions/61353097",
        "text": "hadoopconf.set fs.swift.impl , org.apache.hadoop.fs.swift.snative.swiftnativefilesystem hadoopconf.set fs.swift.service.auth.endpoint.prefix , auth_ hadoopconf.set fs.swift.service.abc.http.port , 443 hadoopconf.set fs.swift.service.abc.tenant , mytenant hadoopconf.set fs.swift.service.abc.region , myreg hadoopconf.set fs.swift.service.abc.useapikey , false hadoopconf.set fs.swift.service.abc.username , myuser hadoopconf.set fs.swift.service.abc.password , mypass"
    },
    {
        "url": "https://stackoverflow.com/questions/61353097",
        "text": "spark.read.json swift: mycontainer.abc yyy.json"
    },
    {
        "url": "https://stackoverflow.com/questions/62575843",
        "text": "from oslo_concurrency import lockutils ... mylock , def my function : pass"
    },
    {
        "url": "https://stackoverflow.com/questions/62691813",
        "text": "from ruamel.yaml import yaml flavor_details flavor_details : type : os::nova::flavor , properties : name : test flavor , extra_specs : hw:cpu_policy : shared , ram : vcpus : disk : output_section server_public_ip : description : floating ip address of server , value : get_attr : server_floating_ip , ip resources_dict resources_dict.update flavor_details resources_dict.update output_section yaml yaml safe with open test.yaml , w as outfile: yaml.dump resources_dict,outfile"
    },
    {
        "url": "https://stackoverflow.com/questions/62950726",
        "text": "properties overrides new properties ; overrides.put keystoneproperties.keystone_version, ; overrides.put keystoneproperties.credential_type, credentialtypes.api_access_key_credentials ; string accesskey accesskey ; string accesssecret accesssecret ; keystoneapi keystone contextbuilder.newbuilder openstack keystone 3 .credentials accesskey, accesssecret .overrides overrides .modules immutableset.of new , new okhttpcommandexecutorservicemodule .buildapi keystoneapi.class ; keystone.getprojectapi .list ;"
    },
    {
        "url": "https://stackoverflow.com/questions/62975654",
        "text": "data getproject for pj in project: for dt in data: if pj.project dt name : pj.addr dt addresses int ext addr"
    },
    {
        "url": "https://stackoverflow.com/questions/63177455",
        "text": "from import session from import from openstack import connection auth admin , secret , project_name= , user_domain_name= project_domain_name= session keystone_session.session auth=auth keystone_connection connection.connection session=session"
    },
    {
        "url": "https://stackoverflow.com/questions/63421199",
        "text": "import requests list input input phone numbers list : link head user agent : user agent here requests.session session s.get link,headers=head phone open list, r while true: num phone.readline .replace \\n if not num: break cot num.strip .split : send s.post link, access_key : , number ,headers=head, stats, respond send.status_code, send.text print stats, respond"
    },
    {
        "url": "https://stackoverflow.com/questions/63624191",
        "text": "from flask import flask, request from openstack import connection from pprint import pprint import json import os app flask __name__ source the openstack project rc file before running this app, to create the environment variables needed conn connection.connection auth_url=os.environ os_auth_url project_name=os.environ , os_username , os_password , user_domain_id= project_domain_id=os.environ os_project_domain_id def hello : return hello from flask! list def list_openstack_resources : check if connection is established print conn: , conn print list of servers, images, flavors, endpoints, projects, users server_list list conn.compute.servers image_list list conn.compute.images flavor_list list conn.compute.flavors project_list list conn.identity.projects user_list list conn.identity.users pprint server_list pprint image_list pprint flavor_list pprint project_list pprint user_list return list printed to stdout create_server def create_server : check if connection is established print conn: , conn create the volume first volume_size request.args.get volume_size print starting to create volume with size in gib : , volume_size volume conn.create_volume size=volume_size, cirros true print created volume: , json.dumps volume create the server using the server_name parameter in the get request server_name request.args.get server_name print starting to create the server with name: , server_name server conn.create_server name=server_name, , terminate_volume=true, boot_volume=volume.id, key_name= public key , print created server: , json.dumps server return server create request sent! if __name__ __main__ : app.run debug=true,"
    },
    {
        "url": "https://stackoverflow.com/questions/63676530",
        "text": "from flask import flask, request from openstack import connection from pprint import pprint import json import os app flask __name__ source the openstack project rc file before running this app, to create the environment variables needed conn connection.connection auth_url=os.environ os_auth_url project_name=os.environ , os_username , os_password , user_domain_id= project_domain_id=os.environ os_project_domain_id def hello : return hello from flask! list def list_openstack_resources : check if connection is established print conn: , conn print list of servers, images, flavors, endpoints, projects, users server_list list conn.compute.servers image_list list conn.compute.images flavor_list list conn.compute.flavors project_list list conn.identity.projects user_list list conn.identity.users pprint server_list pprint image_list pprint flavor_list pprint project_list pprint user_list return list printed to stdout create_server def create_server : check if connection is established print conn: , conn create the volume first volume_size request.args.get volume_size print starting to create volume with size in gib : , volume_size volume conn.create_volume size=volume_size, cirros print create volume: , json.dumps volume create the server using the server_name parameter in the get request server_name request.args.get server_name print starting to create the server with name: , server_name server conn.create_server name=server_name, , terminate_volume=true, boot_volume=volume.id, key_name= app , shared print created server: , json.dumps server return server create request sent! stop_server def stop_server : for server in conn.compute.servers : print json.dumps server delete_server def delete_server : print delete: , conn server_id request.args.get server_id delete_server conn.delete_server name=server_id, ignore_missing=false, print removed , json.dumps delete_server if __name__ __main__ : app.run debug=true,"
    },
    {
        "url": "https://stackoverflow.com/questions/63710742",
        "text": "url redis: password ip port"
    },
    {
        "url": "https://stackoverflow.com/questions/63710742",
        "text": "url redis:"
    },
    {
        "url": "https://stackoverflow.com/questions/63710742",
        "text": "url redis: ip sentinel port master name sentinel_fallback= sentinel port sentinel_fallback sentinel port"
    },
    {
        "url": "https://stackoverflow.com/questions/63749573",
        "text": "import openstack conn openstack.connection.connection session=sess servers conn.compute.servers all_projects=true"
    },
    {
        "url": "https://stackoverflow.com/questions/63749573",
        "text": "from novaclient import client conn client.client 2 servers conn.servers.list detailed=true"
    },
    {
        "url": "https://stackoverflow.com/questions/63749573",
        "text": "from import from import session from import loading def create_loader : loader loading.get_plugin_loader password auth loader.load_from_options auth_url=os.environ , os_username , os_password , project_id=os.environ , user_domain_name=os.environ os_user_domain_name sess session.session auth=auth return sess"
    },
    {
        "url": "https://stackoverflow.com/questions/63879077",
        "text": "after"
    },
    {
        "url": "https://stackoverflow.com/questions/63879077",
        "text": "import tkinter as tk import add from time import ctime import datetime from stackapi import stackapi from import toastnotifier import threading import webbrowser root tk.tk root.title stack notifier def authorise : print auth global end, acc_key, start, inbox, auth_button if required: add.run for automation acc_key add.acc_key_dum passed from another module start datetime.datetime.now hours_added datetime.timedelta hours=24 end start hours_added for reaunthentication site.key add.key key from another module site.access_token acc_key token from another module site.max_pages inbox site.fetch users 13382000 auth_button state tk.disabled threading.thread target=first else: inbox site.fetch users 13382000 threading.thread target=first def first : global current, required, inbox, auth_button def popup : webbrowser.open link,new=0 inbox site.fetch users 13382000 print chc current datetime.datetime.now if start current end: required false else: required true auth_button state tk.normal if not required: print first is_unread inbox items is_unread if is_unread: title inbox items title item_type inbox items item_type link inbox items link creation_date ctime inbox items creation_date noti toastnotifier noti.show_toast f stackoveflow item_type ,f title creation_date ,duration=5,callback_on_click=popup,threaded=true print yes else: threading.thread target=authorise root.after 1000,threading.thread .start required true reference to whether authentication is required again, after hrs label_login tk.label root,text= click to authorise with stackoverflow helvatica label_login.grid row=0,columnspan=3 auth_button tk.button root,text= authorise auth_button.grid row=1,column=1 site stackapi stackoverflow root.mainloop"
    },
    {
        "url": "https://stackoverflow.com/questions/63962661",
        "text": "conn connection.connection ..."
    },
    {
        "url": "https://stackoverflow.com/questions/63962661",
        "text": "for cont in conn.object_store.containers : print cont.name"
    },
    {
        "url": "https://stackoverflow.com/questions/63962661",
        "text": "for data in conn.get_container container_name 1 : print .format data name , data bytes , data last_modified"
    },
    {
        "url": "https://stackoverflow.com/questions/64006562",
        "text": "class restalarmnotifier notifier.alarmnotifier : def notify self, action, alarm_id, alarm_name, severity, previous, current, reason, reason_data, : body alarm_name : alarm_name, alarm_id : alarm_id, severity : severity, previous : previous, current : current, reason : reason, reason_data : reason_data headers content type application json kwargs data : json.dumps body , headers : headers max_retries self.conf.rest_notifier_max_retries session requests.session log.info ######################### log.info session log.info kwargs log.info action.geturl log.info ######################### session.mount action.geturl , requests.adapters.httpadapter max_retries=max_retries resp session.post action.geturl , log.info $$$$$$$$$$$$$$$$$$$$$$$ log.info resp.content log.info $$$$$$$$$$$$$$$$$$$$$$$"
    },
    {
        "url": "https://stackoverflow.com/questions/64043257",
        "text": "from import session from import from senlinclient.client import client as senlinclient def get_senlin_client_by_session session : return senlinclient api_ver=1, admin_auth username= , xxxxxx , project_name= , user_domain_name= project_domain_name= session session.session auth=admin_auth senlin_client get_senlin_client_by_session session print senlin_client"
    },
    {
        "url": "https://stackoverflow.com/questions/64088763",
        "text": "dnsmasq_dns_servers"
    },
    {
        "url": "https://stackoverflow.com/questions/64599843",
        "text": "protected long segmentationsize protected long currentsegment private inputstream inputstream; supplied externally private long inputstreamsize; supplied externally public void uploadsegmentedobjects inputstream segmentstream getnextsegment ; while segmentstream null do something public inputstream getnextsegment if done return null; inputstream segment createsegment ; return segment; protected boolean done return currentsegment segmentationsize inputstreamsize; protected inputstream createsegment throws ioexception boundedinputstream stream new boundedinputstream inputstream, segmentationsize ; stream.setpropagateclose false ; return stream;"
    },
    {
        "url": "https://stackoverflow.com/questions/64711382",
        "text": "cfg.intopt resource_cache_expiry ,"
    },
    {
        "url": "https://stackoverflow.com/questions/64711382",
        "text": "default_ttl"
    },
    {
        "url": "https://stackoverflow.com/questions/64761328",
        "text": "conn openstack.connect cloudname pprint conn.identity.groups"
    },
    {
        "url": "https://stackoverflow.com/questions/64778951",
        "text": "conn openstack.connect cloud pprint conn.identity.find_user username"
    },
    {
        "url": "https://stackoverflow.com/questions/64778951",
        "text": "pprint conn.identity.find_user username"
    },
    {
        "url": "https://stackoverflow.com/questions/64788752",
        "text": "from import from keystoneclient.exceptions import clientexception from import session from keystoneclient.v3.client import client def keystone_client version= , auth_url=none, user_id=none, project_id=none auth auth_url=auth_url, user_id=user_id, project_id=project_id sess session try: return client except clientexception as e: print e todo: use logging"
    },
    {
        "url": "https://stackoverflow.com/questions/64788752",
        "text": "client keystone_client ... clinet.services.list client.users.list"
    },
    {
        "url": "https://stackoverflow.com/questions/64788752",
        "text": "log.warning failed to contact the endpoint at for discovery. fallback to using that endpoint as the base url. , url"
    },
    {
        "url": "https://stackoverflow.com/questions/64905759",
        "text": "connection.get_object container,object"
    },
    {
        "url": "https://stackoverflow.com/questions/64969429",
        "text": "context zmq.context to talk to server socket context.socket zmq.req socket.connect tcp: name max while true: message input message: socket.send_pyobj name, message"
    },
    {
        "url": "https://stackoverflow.com/questions/64969429",
        "text": "context zmq.context socket context.socket zmq.rep socket.bind tcp: 0.0.0.0:5555 while true: for next request from client message socket.recv_pyobj print message.get 1 message.get 1"
    },
    {
        "url": "https://stackoverflow.com/questions/65266481",
        "text": "from import session from novaclient import client import json from requests import get ...auth.... sg_list nova.security_groups.list print sg_list"
    },
    {
        "url": "https://stackoverflow.com/questions/65409494",
        "text": "openstack.compute.v2.server.server os ext sts : task_state=none os ext srv attr : user_data=none os ext sts : vm_state=active os ext srv attr :instance_name=instance os ext srv attr : root_device_name= dev , os srv usg :launched_at=t, : os ext ips mac:mac_addr : fa:16:3e:29:9b:f4 , version addr os ext ips:type : fixed"
    },
    {
        "url": "https://stackoverflow.com/questions/65821329",
        "text": "from django.utils.translation import pgettext import horizon class apiaccess horizon.panel : name pgettext api access , api access slug api_access"
    },
    {
        "url": "https://stackoverflow.com/questions/65853034",
        "text": "httpconnectionpool controller , : max retries exceeded with url: caused by newconnectionerror object at failed to establish new connection: errno connection refused"
    },
    {
        "url": "https://stackoverflow.com/questions/66140872",
        "text": "resp_headers conn.head_object container, local_file_path"
    },
    {
        "url": "https://stackoverflow.com/questions/66171212",
        "text": "cloud.compute.create_server name=name, .... image_id=image.id, user"
    },
    {
        "url": "https://stackoverflow.com/questions/66303208",
        "text": "httpconnectionpool controller , : max retries exceeded with url: caused by newconnectionerror object at failed to establish new connection: errno connection refused"
    },
    {
        "url": "https://stackoverflow.com/questions/66604132",
        "text": "sub_a 192.168.1.0"
    },
    {
        "url": "https://stackoverflow.com/questions/66604132",
        "text": "sub_b 10.0.0.0"
    },
    {
        "url": "https://stackoverflow.com/questions/66604132",
        "text": "sub_public 172.24.4.0"
    },
    {
        "url": "https://stackoverflow.com/questions/66637872",
        "text": "from pyghmi.ipmi import command ipmi command.command ip, user, passwd res ipmi.get_power print res wait seconds ipmi.get_power get session logged out command.command ip, user, paswd deadlock if wait seconds, else no get session logged out impossible to create new command.command session, every command will give logged out"
    },
    {
        "url": "https://stackoverflow.com/questions/66637872",
        "text": "command.command"
    },
    {
        "url": "https://stackoverflow.com/questions/66820501",
        "text": "import pulumi import pulumi_openstack as openstack example_zone openstack.dns.zone examplezone , a zone , , primary rs_example_com openstack.dns.recordset rsexamplecom , an example record set , a , zone_id=example_zone.id"
    },
    {
        "url": "https://stackoverflow.com/questions/66866033",
        "text": "volumes cinder.volumes.list"
    },
    {
        "url": "https://stackoverflow.com/questions/66868330",
        "text": "requirements"
    },
    {
        "url": "https://stackoverflow.com/questions/67225993",
        "text": "sensitive true"
    },
    {
        "url": "https://stackoverflow.com/questions/67440374",
        "text": "def update_tags self, params : check self, params responses try: headers x auth token : params.headers x auth token , content type : application json for server in params.data payload : replace_tags tags : server tags os.environ.get protocol + : +os.environ.get : +os.environ.get compute_port + id tags , replace_tags , responses.append response return responses except exception as e: raise"
    },
    {
        "url": "https://stackoverflow.com/questions/67440374",
        "text": "def check self, params : self.connection get_openstack_conn params"
    },
    {
        "url": "https://stackoverflow.com/questions/67440374",
        "text": "def get_openstack_conn params : token params.meta.get http_x_auth_token scope params.meta.get http_x_scope organization params.meta.get http_x_org print environment variables print protocol ,os.environ.get protocol print openstack_host ,os.environ.get openstack_host print key_stone_port ,os.environ.get key_stone_port if scope projectscope : connector openstack.connect auth_url=os.environ.get protocol : +os.environ.get openstack_host +os.environ.get key_stone_port + v3 , auth_type= , project_id=organization elif scope domainscope : connector openstack.connect auth_url=os.environ.get protocol : +os.environ.get openstack_host +os.environ.get key_stone_port + v3 , auth_type= , domain_id=organization return connector"
    },
    {
        "url": "https://stackoverflow.com/questions/67472488",
        "text": "public string createworker string script .encodetostring #! bash\\n sudo mkdir servercreate server builders.server .name slave machine instance name .flavor flavour id .image image id .keypairname mypemkey key pair name .addsecuritygroup security group id allow ssh .userdata script .build ; build the vm with above configuration return os.compute .servers .boot server .getid ;"
    },
    {
        "url": "https://stackoverflow.com/questions/68032183",
        "text": "import , region_name= east 1 aws_access_key_id=key_id, aws_secret_access_key=access_key string content to write to new file my bucket name , newfile.txt .put body=content"
    },
    {
        "url": "https://stackoverflow.com/questions/68053264",
        "text": "import os def is_safe_path basedir, path, follow_symlinks=true resolves symbolic links if follow_symlinks: matchpath os.path.realpath path .startswith basedir else: matchpath os.path.abspath path .startswith basedir return basedir os.path.commonpath basedir, matchpath is_safe_path test , test .. abc"
    },
    {
        "url": "https://stackoverflow.com/questions/68150800",
        "text": "debug true"
    },
    {
        "url": "https://stackoverflow.com/questions/68201833",
        "text": "import s3 5d14869948294bb48f9bfe684b8892ca ,aws_secret_access_key= ffcbcec69fb54622a0185a5848d7d0d2 for bucket in : print bucket"
    },
    {
        "url": "https://stackoverflow.com/questions/68232887",
        "text": "session.client service_name= s3 ... aws_access_key_id= access_key_id_goes_here , ... aws_secret_access_key= secret_key_goes_here , ... endpoint_url="
    },
    {
        "url": "https://stackoverflow.com/questions/68378228",
        "text": "for example with: curl s h x auth token: flavors python m json.tool"
    },
    {
        "url": "https://stackoverflow.com/questions/68378228",
        "text": "parser argparse.argumentparser description= info, formatter_class=argparse.rawtexthelpformatter parser.add_argument t , token , openstack api token , args parser.parse_args user_token args.token headers content type : application json , authorization : x auth token user_token request url flavors : images : get account data try: result requests.get images , result_data json.loads result.content except exception as print sys.exit \\nerror requesting please check conectivity images , if errors in result_data print sys.exit f token, please check token: result_data clean_agent agent.update agent_name openstack_images_%s agent_alias openstack_images description id clean_module modulo.update name openstack_image disk: , desc openstack image is result_data images mindisk , value str result_data images mindisk ,"
    },
    {
        "url": "https://stackoverflow.com/questions/68419535",
        "text": "images_type raw"
    },
    {
        "url": "https://stackoverflow.com/questions/68449090",
        "text": "playbook_path=newpath"
    },
    {
        "url": "https://stackoverflow.com/questions/68678899",
        "text": "image conn.create_flavor opt config template.yml flavor_one,"
    },
    {
        "url": "https://stackoverflow.com/questions/68907840",
        "text": "service_provider"
    },
    {
        "url": "https://stackoverflow.com/questions/69395016",
        "text": "from stackapi import stackapi sitename stackoverflow site stackapi sitename questions site.fetch questions print len questions"
    },
    {
        "url": "https://stackoverflow.com/questions/69452667",
        "text": "from oslo_config import cfg from oslo_log import log import oslo_log conf cfg.conf domain demo log.register_options conf log log.getlogger __name__ _default_logging_context_format asctime s,% d levelname filename s:% d message s log.set_defaults _default_logging_context_format, _default_log_levels log.setup conf, domain log.info welcome to oslo logging log.debug a debugging message log.warning a occurred log.error an occurred print conf.logging_context_format_string"
    },
    {
        "url": "https://stackoverflow.com/questions/69616030",
        "text": "update_user user,"
    },
    {
        "url": "https://stackoverflow.com/questions/69616030",
        "text": "import openstack conn openstack.connect region_name regionone , auth_url domain_name , project_name admin , username admin , password user_args name : admin , pasword : aaa , new password password_expires_at :none, links : u self : enabled :true, domain_id : , original_password : , conn.identity.update_user user_args"
    },
    {
        "url": "https://stackoverflow.com/questions/69672162",
        "text": "import openstack import openstack.compute.v2.limits import os import datetime getting limits conn openstack.connect auth_url=auth_url_domain, project_name= , admin , domain_name= ,password= , root app cacrt cacrt ca.crt10.6.x.x.pem session=conn print data.to_dict"
    },
    {
        "url": "https://stackoverflow.com/questions/70251338",
        "text": "nova_keypair trove mgmt"
    },
    {
        "url": "https://stackoverflow.com/questions/70283453",
        "text": "instances_number=2 server conn.compute.create_server image_id=image.id, flavor_id=flavor.id, uuid : network.id , key_name=keypair.name, user_data=init_script, has_config_drive=true, min_count=instances_number, max_count=instances_number"
    },
    {
        "url": "https://stackoverflow.com/questions/70413652",
        "text": "import os import datetime import argparse from os import environ as env from ceilometerclient import client from keystoneclient.v2_0 import client from import from import session from glanceclient import client auth user_domain_name=env os_user_domain_name , os_username , os_password , project_domain_id=env os_project_domain_id project_name=env , auth_url=env sess session.session auth=auth, usr local share ca certificates openstack.crt keystone client.client session sess final_data def list_all_projects : projects projects keystone.projects.list return projects def get_datetime midnight : dtime datetime.datetime.now if midnight is true: current_dtime dtime.strftime %d else: current_dtime dtime.strftime %d return current_dtime timestamp_start get_datetime true timestamp_end get_datetime false projects list_all_projects for project in projects: project_name project name project_id project id ceilometer_client client.get_client 2 , query dict project , eq , , dict source , eq , openstack resources ceilometer_client.resources.list q=query for resource in resources: rid resource.resource_id query dict resource_id , eq , , dict timestamp , gt , , dict timestamp , lt , average cpu usage cpu_util cpus client.statistics.list meter_name= cpu_util , cpu_util cpus avg average number of vcpus vcpu_average vcpus client.statistics.list meter_name= vcpus , vcpu_average vcpus avg memory usage memory_usage memories client.statistics.list meter_name= memory.usage , memory_usage memories avg disc usage disk_root_average root_disk_size client.statistics.list meter_name= ,q=query disk_root_average root_disk_size avg resource_data resource project_id ; project_name ; resource resource_id ; timestamp_start ; timestamp_end ; str cpu_util ; str vcpu_average ; str memory_usage ; str disk_root_average final_data.append resource_data parser argparse.argumentparser description= for statistics parser.add_argument fname , stats.txt , file , output file names args parser.parse_args filename args.fname wfile open filename, a wfile.write final_data wfile.close"
    },
    {
        "url": "https://stackoverflow.com/questions/71113832",
        "text": "from xmlrpc.client import boolean from sqlalchemy import timestamp, column, integer, string from sqlalchemy.sql.expression import text from .database import base class post base : __tablename__ posts id column integer, primary_key=true, title column string, content column string, published column boolean, server_default= , created_at= column timestamp , false, server_default=text"
    },
    {
        "url": "https://stackoverflow.com/questions/71113832",
        "text": "models.base.metadata.create_all bind=engine"
    },
    {
        "url": "https://stackoverflow.com/questions/71334269",
        "text": "class proxyloggingmiddleware object : middleware that logs swift proxy requests in the swift log format. def __init__ self, app, conf, : self.queue queue print self.processor self.init_queue_processor print def init_queue_processor self : processor threading.thread target=self.process_queue, self.fifo_pipe_pathname, self.queue, self.logger processor.setdaemon true processor.start return processor def process_queue fifo_pipe_pathname, queue, logger : json_encoder json.jsonencoder while true: stat queue.get true blocks here"
    },
    {
        "url": "https://stackoverflow.com/questions/71334269",
        "text": "def m : print time.sleep 3 print threading.thread target=m t.daemon true t.start print"
    },
    {
        "url": "https://stackoverflow.com/questions/71334269",
        "text": "def __init__ self, app, conf, : print threading.currentthread self.processor self.init_queue_processor def init_queue_processor self : processor threading.thread target=self.process_queue, self.fifo_pipe_pathname, self.queue, self.logger processor.setdaemon true processor.start return processor def process_queue fifo_pipe_pathname, queue, logger : print threading.currentthread json_encoder json.jsonencoder while true: ...."
    },
    {
        "url": "https://stackoverflow.com/questions/71343605",
        "text": "cpu_mode none cpu_mode host passthrough virt_type kvm virt_type qemu"
    },
    {
        "url": "https://stackoverflow.com/questions/72045300",
        "text": "port conn.network.get_port openstack.network.v2.port.port fixed_ips= subnet_id , ip_address :"
    },
    {
        "url": "https://stackoverflow.com/questions/72045300",
        "text": "port conn.network.ports fixed_ips= ip_address :"
    },
    {
        "url": "https://stackoverflow.com/questions/72045300",
        "text": "port conn.network.ports fixed_ips= 1.1.1.1"
    },
    {
        "url": "https://stackoverflow.com/questions/72045300",
        "text": "port conn.network.ports ip_address= 1.1.1.1"
    },
    {
        "url": "https://stackoverflow.com/questions/72435215",
        "text": "private osclient.osclientv3 authenticate try osclient.osclientv3 os osfactory.builderv3 .endpoint osproperties.getauthurl .credentials osproperties.getusername , osproperties.getpassword , identifier.byname osproperties.getdomainname .scopetoproject identifier.byid osproperties.getprojectid .authenticate ; os.useregion osproperties.getregion ; return os; catch responseexception exception log.debug with authentication os: , exception.getcause .getlocalizedmessage ; throw exception;"
    },
    {
        "url": "https://stackoverflow.com/questions/72771365",
        "text": "vcpu_pin_set=2,3,4,5,6,7,17,18,19,20,21,22,23,10,11,12,13,14,15,24,25,26,27,28,29,30,31"
    },
    {
        "url": "https://stackoverflow.com/questions/72824404",
        "text": "def create_connection project_id=none optional connection : create connection to client s project in openstack :param project_id: :return: connection os_project_id project_id or settings.openstack.get project_id return openstack.connect auth_url=settings.openstack.get , project_id=os_project_id, username , password , user_domain_name=settings.openstack.get user_domain_name project_domain_name=settings.openstack.get project_domain_name app_name= , app_version= call function create connection conn create_connection project_id get project project conn.identity.get_project project_id with project id of client conn.connect_as_project project"
    },
    {
        "url": "https://stackoverflow.com/questions/73148077",
        "text": "from pathlib import path build paths inside the project like this: base_dir subdir . base_dir path __file__ .resolve .parent.parent quick start development settings unsuitable for production see security warning: keep the secret key used in production secret! secret_key django insecure bo security warning: don t run with debug turned on in production! debug true allowed_hosts application definition installed_apps django.contrib.admin , django.contrib.auth , django.contrib.contenttypes , django.contrib.sessions , django.contrib.messages , django.contrib.staticfiles , rest_framework , api , custom by me rest_framework default_permission_classes : rest_framework.permissions.isauthenticated , , middleware django.middleware.security.securitymiddleware , django.contrib.sessions.middleware.sessionmiddleware , django.middleware.common.commonmiddleware , django.middleware.csrf.csrfviewmiddleware , django.contrib.auth.middleware.authenticationmiddleware , django.contrib.messages.middleware.messagemiddleware , django.middleware.clickjacking.xframeoptionsmiddleware , root_urlconf cloudhome.urls templates backend : django.template.backends.django.djangotemplates , dirs : base_dir templates , app_dirs : true, options : context_processors : django.template.context_processors.debug , django.template.context_processors.request , django.contrib.auth.context_processors.auth , django.contrib.messages.context_processors.messages , , , , wsgi_application cloudhome.wsgi.application database databases : engine : django.db.backends.sqlite3 , name : base_dir db.sqlite3 password validation auth_password_validators name : django.contrib.auth.password_validation.userattributesimilarityvalidator , , name : django.contrib.auth.password_validation.minimumlengthvalidator , , name : django.contrib.auth.password_validation.commonpasswordvalidator , , name : django.contrib.auth.password_validation.numericpasswordvalidator , , internationalization language_code en us time_zone utc use_i18n true use_tz true static files css, javascript, images static_url static staticfiles_dirs base_dir static static_root static_root primary key field type default_auto_field django.db.models.bigautofield"
    },
    {
        "url": "https://stackoverflow.com/questions/73148077",
        "text": "from django.contrib import admin from django.conf import settings from django.conf.urls.static import static from django.urls import path, include urlpatterns path admin , admin.site.urls , path api auth , include rest_framework.urls , rest_framework , path api , include api.urls , api , if settings.debug: urlpatterns static settings.static_url, document_root=settings.static_root"
    },
    {
        "url": "https://stackoverflow.com/questions/73148077",
        "text": "from django.urls import path from rest_framework.urlpatterns import format_suffix_patterns from api import views app_name api urlpatterns path servers , views.serverlist.as_view , path servers slug:pk views.serverdetail.as_view , urlpatterns format_suffix_patterns urlpatterns"
    },
    {
        "url": "https://stackoverflow.com/questions/73148077",
        "text": "from django.http import httpresponse, jsonresponse from django.views.decorators.csrf import csrf_exempt from requests import request from rest_framework.parsers import jsonparser from api.serializers import serverserializer from rest_framework.views import apiview from rest_framework.response import response from rest_framework import generics import openstack from openstack import connection from rest_framework import authentication, permissions from rest_framework.permissions import isauthenticated openstack.enable_logging debug=true project_name= ,username= , nomoresecret , user_domain_id= project_domain_id= class serverlist generics.listapiview : queryset conn.compute.servers serializer_class serverserializer permission_classes permissions.isauthenticated class serverdetail generics.retrieveapiview : queryset conn.compute.servers serializer_class serverserializer permission_classes permissions.isauthenticated"
    },
    {
        "url": "https://stackoverflow.com/questions/73148077",
        "text": "import openstack from openstack import connection from requests import response from rest_framework import serializers from rest_framework import status openstack.enable_logging debug=true project_name= ,username= , nomoresecret , user_domain_id= project_domain_id= class serverserializer serializers.serializer : instance_id serializers.charfield read_only=true name serializers.charfield max_length=100 image serializers.charfield max_length=500 fixed_ip serializers.ipaddressfield read_only=true floating_ip serializers.ipaddressfield required=false, allow_blank=true flavor serializers.charfield max_length=500 networks serializers.charfield max_length=500 key_pair serializers.charfield max_length=100, allow_blank=true status serializers.charfield max_length=20, read_only=true power_state serializers.charfield max_length=20, read_only=true console_url serializers.urlfield max_length=100, read_only=true def create self, validated_data : servercreated conn.compute.create_server name=validated_data instance_name , image_id=validated_data , flavor_id=validated_data , uuid : validated_data network_id serverwait conn.compute.wait_for_server servercreated print serverwait.access_ipv4 return serverwait"
    },
    {
        "url": "https://stackoverflow.com/questions/73154459",
        "text": "prometheus_scrape_haproxy true"
    },
    {
        "url": "https://stackoverflow.com/questions/73217850",
        "text": "img self.glance.images.create is_public=bool , disk_format=disk_format, container_format=container_format, min_disk=min_disk, min_ram=min_ram,"
    },
    {
        "url": "https://stackoverflow.com/questions/73217850",
        "text": "glanceclient.client.client 1 ,"
    },
    {
        "url": "https://stackoverflow.com/questions/73287504",
        "text": "newregion array endpoint"
    },
    {
        "url": "https://stackoverflow.com/questions/73509809",
        "text": "openstack.connect"
    },
    {
        "url": "https://stackoverflow.com/questions/73509809",
        "text": "from cinderclient import client from import loading loader loading.get_plugin_loader password auth_cinder loader.load_from_options"
    },
    {
        "url": "https://stackoverflow.com/questions/73509809",
        "text": "openstack.connect"
    },
    {
        "url": "https://stackoverflow.com/questions/73610309",
        "text": "secret secret os.barbican .secrets .get 19cbc4e8 secret.getpayload ; returns null"
    },
    {
        "url": "https://stackoverflow.com/questions/73649308",
        "text": "conn openstack.connect load_yaml_config=false, load_envvars=false, auth_url=al, project_name=pn, region_name=rn, user_domain_name=udn, project_domain_name=pdn, app_name=42, app_version=42"
    },
    {
        "url": "https://stackoverflow.com/questions/73760873",
        "text": "servercreate sc builders.server .name instance_name .flavor flavor_id .image img_id .build ; sc.addnetwork network_id ,fixedip ; server server os.compute .servers .boot sc ;"
    },
    {
        "url": "https://stackoverflow.com/questions/73994127",
        "text": "max_pool_size or api_max_pool_size"
    },
    {
        "url": "https://stackoverflow.com/questions/73994127",
        "text": "max_overflow or api_max_overflow"
    },
    {
        "url": "https://stackoverflow.com/questions/74110275",
        "text": "backup_driver cinder.backup.drivers.nfs.nfsbackupdriver backup_container none backup_enable_progress_timer true backup_file_size backup_mount_attempts backup_mount_options vers:3 backup_mount_point_base backup_posix_path backup_sha_block_size_bytes backup_share xx.xx.xx.xx: mnt backup_nfs karthigaa_test"
    },
    {
        "url": "https://stackoverflow.com/questions/74628708",
        "text": "coreos.inst.install_dev= dev vdb coreos.inst.insecure=yes"
    }
]